//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.06.18 at 04:20:25 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 * 				Product: ALL
 * 				Description: Details of taxes charged
 * 				on the transaction as a whole. For US versions of QuickBooks, tax
 * 				rates used in the detail section must not be used in any tax line
 * 				appearing in the main transaction body. For international versions
 * 				of QuickBooks, the TxnTaxDetail should provide the details of all
 * 				taxes (sales or purchase) calculated for the transaction based on
 * 				the tax codes referenced by the transaction. This can be calculated
 * 				by QuickBooks business logic or you may supply it when adding a
 * 				transaction. For US versions of QuickBooks you need only supply the
 * 				tax code for the customer and the tax code (in the case of multiple
 * 				rates) or tax rate (for a single rate) to apply for the transaction
 * 				as a whole.[br]See [a
 * 				href="http://ipp.developer.intuit.com/0010_Intuit_Partner_Platform/0060_Financial_Management_Services_(v3)/01100_Global_Tax_Model"]Global
 * 				Tax Model[/a].
 * 			
 * 
 * <p>Java class for TxnTaxDetail complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TxnTaxDetail"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="DefaultTaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="TxnTaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="TotalTax" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="TaxReviewStatus" type="{http://schema.intuit.com/finance/v3}TaxReviewStatusEnum" minOccurs="0"/&gt;
 *         &lt;element name="TaxLine" type="{http://schema.intuit.com/finance/v3}Line" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="UseAutomatedSalesTax" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TxnTaxDetail", propOrder = {
    "defaultTaxCodeRef",
    "txnTaxCodeRef",
    "totalTax",
    "taxReviewStatus",
    "taxLine",
    "useAutomatedSalesTax"
})
public class TxnTaxDetail
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "DefaultTaxCodeRef")
    protected ReferenceType defaultTaxCodeRef;
    @XmlElement(name = "TxnTaxCodeRef")
    protected ReferenceType txnTaxCodeRef;
    @XmlElement(name = "TotalTax")
    protected BigDecimal totalTax;
    @XmlElement(name = "TaxReviewStatus")
    @XmlSchemaType(name = "string")
    protected TaxReviewStatusEnum taxReviewStatus;
    @XmlElement(name = "TaxLine")
    protected List<Line> taxLine;
    @XmlElement(name = "UseAutomatedSalesTax")
    protected Boolean useAutomatedSalesTax;

    /**
     * Gets the value of the defaultTaxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getDefaultTaxCodeRef() {
        return defaultTaxCodeRef;
    }

    /**
     * Sets the value of the defaultTaxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setDefaultTaxCodeRef(ReferenceType value) {
        this.defaultTaxCodeRef = value;
    }

    /**
     * Gets the value of the txnTaxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTxnTaxCodeRef() {
        return txnTaxCodeRef;
    }

    /**
     * Sets the value of the txnTaxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTxnTaxCodeRef(ReferenceType value) {
        this.txnTaxCodeRef = value;
    }

    /**
     * Gets the value of the totalTax property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalTax() {
        return totalTax;
    }

    /**
     * Sets the value of the totalTax property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalTax(BigDecimal value) {
        this.totalTax = value;
    }

    /**
     * Gets the value of the taxReviewStatus property.
     * 
     * @return
     *     possible object is
     *     {@link TaxReviewStatusEnum }
     *     
     */
    public TaxReviewStatusEnum getTaxReviewStatus() {
        return taxReviewStatus;
    }

    /**
     * Sets the value of the taxReviewStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxReviewStatusEnum }
     *     
     */
    public void setTaxReviewStatus(TaxReviewStatusEnum value) {
        this.taxReviewStatus = value;
    }

    /**
     * Gets the value of the taxLine property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the taxLine property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTaxLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Line }
     * 
     * 
     */
    public List<Line> getTaxLine() {
        if (taxLine == null) {
            taxLine = new ArrayList<Line>();
        }
        return this.taxLine;
    }

    /**
     * Gets the value of the useAutomatedSalesTax property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseAutomatedSalesTax() {
        return useAutomatedSalesTax;
    }

    /**
     * Sets the value of the useAutomatedSalesTax property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseAutomatedSalesTax(Boolean value) {
        this.useAutomatedSalesTax = value;
    }

}
