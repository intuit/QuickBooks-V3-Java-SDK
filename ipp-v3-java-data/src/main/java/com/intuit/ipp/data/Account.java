//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Account is a component of a Chart Of Accounts, and
 * 				is part of a Ledger. Used to record a total monetary amount
 * 				allocated against a specific use.
 * 				Accounts are one of five basic types: asset, liability, revenue (income),
 * 				expenses, or equity.
 * 			
 * 
 * <p>Java class for Account complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Account"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}IntuitEntity"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="SubAccount" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="ParentRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="FullyQualifiedName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="AccountAlias" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="TxnLocationType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Active" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="Classification" type="{http://schema.intuit.com/finance/v3}AccountClassificationEnum" minOccurs="0"/&gt;
 *         &lt;element name="AccountType" type="{http://schema.intuit.com/finance/v3}AccountTypeEnum" minOccurs="0"/&gt;
 *         &lt;element name="AccountSubType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="AccountPurposes" type="{http://schema.intuit.com/finance/v3}ReferenceType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="AcctNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="AcctNumExtn" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="BankNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="OpeningBalance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="OpeningBalanceDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="CurrentBalance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="CurrentBalanceWithSubAccounts" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="CurrencyRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="TaxAccount" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="TaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="OnlineBankingEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="FIName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="JournalCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="AccountEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Account", propOrder = {
    "name",
    "subAccount",
    "parentRef",
    "description",
    "fullyQualifiedName",
    "accountAlias",
    "txnLocationType",
    "active",
    "classification",
    "accountType",
    "accountSubType",
    "accountPurposes",
    "acctNum",
    "acctNumExtn",
    "bankNum",
    "openingBalance",
    "openingBalanceDate",
    "currentBalance",
    "currentBalanceWithSubAccounts",
    "currencyRef",
    "taxAccount",
    "taxCodeRef",
    "onlineBankingEnabled",
    "fiName",
    "journalCodeRef",
    "accountEx"
})
@XmlSeeAlso({
    MasterAccount.class
})
public class Account
    extends IntuitEntity
    implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Name")
    protected String name;
    @XmlElement(name = "SubAccount")
    protected Boolean subAccount;
    @XmlElement(name = "ParentRef")
    protected ReferenceType parentRef;
    @XmlElement(name = "Description")
    protected String description;
    @XmlElement(name = "FullyQualifiedName")
    protected String fullyQualifiedName;
    @XmlElement(name = "AccountAlias")
    protected String accountAlias;
    @XmlElement(name = "TxnLocationType")
    protected String txnLocationType;
    @XmlElement(name = "Active")
    protected Boolean active;
    @XmlElement(name = "Classification")
    @XmlSchemaType(name = "string")
    protected AccountClassificationEnum classification;
    @XmlElement(name = "AccountType")
    @XmlSchemaType(name = "string")
    protected AccountTypeEnum accountType;
    @XmlElement(name = "AccountSubType")
    protected String accountSubType;
    @XmlElement(name = "AccountPurposes")
    protected List<ReferenceType> accountPurposes;
    @XmlElement(name = "AcctNum")
    protected String acctNum;
    @XmlElement(name = "AcctNumExtn")
    protected String acctNumExtn;
    @XmlElement(name = "BankNum")
    protected String bankNum;
    @XmlElement(name = "OpeningBalance")
    protected BigDecimal openingBalance;
    @XmlElement(name = "OpeningBalanceDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date openingBalanceDate;
    @XmlElement(name = "CurrentBalance")
    protected BigDecimal currentBalance;
    @XmlElement(name = "CurrentBalanceWithSubAccounts")
    protected BigDecimal currentBalanceWithSubAccounts;
    @XmlElement(name = "CurrencyRef")
    protected ReferenceType currencyRef;
    @XmlElement(name = "TaxAccount")
    protected Boolean taxAccount;
    @XmlElement(name = "TaxCodeRef")
    protected ReferenceType taxCodeRef;
    @XmlElement(name = "OnlineBankingEnabled")
    protected Boolean onlineBankingEnabled;
    @XmlElement(name = "FIName")
    protected String fiName;
    @XmlElement(name = "JournalCodeRef")
    protected ReferenceType journalCodeRef;
    @XmlElement(name = "AccountEx")
    protected IntuitAnyType accountEx;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the subAccount property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSubAccount() {
        return subAccount;
    }

    /**
     * Sets the value of the subAccount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSubAccount(Boolean value) {
        this.subAccount = value;
    }

    /**
     * Gets the value of the parentRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getParentRef() {
        return parentRef;
    }

    /**
     * Sets the value of the parentRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setParentRef(ReferenceType value) {
        this.parentRef = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the fullyQualifiedName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFullyQualifiedName() {
        return fullyQualifiedName;
    }

    /**
     * Sets the value of the fullyQualifiedName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFullyQualifiedName(String value) {
        this.fullyQualifiedName = value;
    }

    /**
     * Gets the value of the accountAlias property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountAlias() {
        return accountAlias;
    }

    /**
     * Sets the value of the accountAlias property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountAlias(String value) {
        this.accountAlias = value;
    }

    /**
     * Gets the value of the txnLocationType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxnLocationType() {
        return txnLocationType;
    }

    /**
     * Sets the value of the txnLocationType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxnLocationType(String value) {
        this.txnLocationType = value;
    }

    /**
     * Gets the value of the active property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isActive() {
        return active;
    }

    /**
     * Sets the value of the active property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setActive(Boolean value) {
        this.active = value;
    }

    /**
     * Gets the value of the classification property.
     * 
     * @return
     *     possible object is
     *     {@link AccountClassificationEnum }
     *     
     */
    public AccountClassificationEnum getClassification() {
        return classification;
    }

    /**
     * Sets the value of the classification property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccountClassificationEnum }
     *     
     */
    public void setClassification(AccountClassificationEnum value) {
        this.classification = value;
    }

    /**
     * Gets the value of the accountType property.
     * 
     * @return
     *     possible object is
     *     {@link AccountTypeEnum }
     *     
     */
    public AccountTypeEnum getAccountType() {
        return accountType;
    }

    /**
     * Sets the value of the accountType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccountTypeEnum }
     *     
     */
    public void setAccountType(AccountTypeEnum value) {
        this.accountType = value;
    }

    /**
     * Gets the value of the accountSubType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountSubType() {
        return accountSubType;
    }

    /**
     * Sets the value of the accountSubType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountSubType(String value) {
        this.accountSubType = value;
    }

    /**
     * Gets the value of the accountPurposes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accountPurposes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccountPurposes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     * 
     * 
     */
    public List<ReferenceType> getAccountPurposes() {
        if (accountPurposes == null) {
            accountPurposes = new ArrayList<ReferenceType>();
        }
        return this.accountPurposes;
    }

    /**
     * Gets the value of the acctNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcctNum() {
        return acctNum;
    }

    /**
     * Sets the value of the acctNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcctNum(String value) {
        this.acctNum = value;
    }

    /**
     * Gets the value of the acctNumExtn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcctNumExtn() {
        return acctNumExtn;
    }

    /**
     * Sets the value of the acctNumExtn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcctNumExtn(String value) {
        this.acctNumExtn = value;
    }

    /**
     * Gets the value of the bankNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBankNum() {
        return bankNum;
    }

    /**
     * Sets the value of the bankNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBankNum(String value) {
        this.bankNum = value;
    }

    /**
     * Gets the value of the openingBalance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getOpeningBalance() {
        return openingBalance;
    }

    /**
     * Sets the value of the openingBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setOpeningBalance(BigDecimal value) {
        this.openingBalance = value;
    }

    /**
     * Gets the value of the openingBalanceDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getOpeningBalanceDate() {
        return openingBalanceDate;
    }

    /**
     * Sets the value of the openingBalanceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOpeningBalanceDate(Date value) {
        this.openingBalanceDate = value;
    }

    /**
     * Gets the value of the currentBalance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCurrentBalance() {
        return currentBalance;
    }

    /**
     * Sets the value of the currentBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCurrentBalance(BigDecimal value) {
        this.currentBalance = value;
    }

    /**
     * Gets the value of the currentBalanceWithSubAccounts property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCurrentBalanceWithSubAccounts() {
        return currentBalanceWithSubAccounts;
    }

    /**
     * Sets the value of the currentBalanceWithSubAccounts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCurrentBalanceWithSubAccounts(BigDecimal value) {
        this.currentBalanceWithSubAccounts = value;
    }

    /**
     * Gets the value of the currencyRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getCurrencyRef() {
        return currencyRef;
    }

    /**
     * Sets the value of the currencyRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setCurrencyRef(ReferenceType value) {
        this.currencyRef = value;
    }

    /**
     * Gets the value of the taxAccount property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTaxAccount() {
        return taxAccount;
    }

    /**
     * Sets the value of the taxAccount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTaxAccount(Boolean value) {
        this.taxAccount = value;
    }

    /**
     * Gets the value of the taxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTaxCodeRef() {
        return taxCodeRef;
    }

    /**
     * Sets the value of the taxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTaxCodeRef(ReferenceType value) {
        this.taxCodeRef = value;
    }

    /**
     * Gets the value of the onlineBankingEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOnlineBankingEnabled() {
        return onlineBankingEnabled;
    }

    /**
     * Sets the value of the onlineBankingEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOnlineBankingEnabled(Boolean value) {
        this.onlineBankingEnabled = value;
    }

    /**
     * Gets the value of the fiName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFIName() {
        return fiName;
    }

    /**
     * Sets the value of the fiName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFIName(String value) {
        this.fiName = value;
    }

    /**
     * Gets the value of the journalCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getJournalCodeRef() {
        return journalCodeRef;
    }

    /**
     * Sets the value of the journalCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setJournalCodeRef(ReferenceType value) {
        this.journalCodeRef = value;
    }

    /**
     * Gets the value of the accountEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getAccountEx() {
        return accountEx;
    }

    /**
     * Sets the value of the accountEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setAccountEx(IntuitAnyType value) {
        this.accountEx = value;
    }

    /**
     * Sets the value of the accountPurposes property.
     * 
     * @param accountPurposes
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setAccountPurposes(List<ReferenceType> accountPurposes) {
        this.accountPurposes = accountPurposes;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Account that = ((Account) object);
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName, (this.name!= null), (that.name!= null))) {
                return false;
            }
        }
        {
            Boolean lhsSubAccount;
            lhsSubAccount = this.isSubAccount();
            Boolean rhsSubAccount;
            rhsSubAccount = that.isSubAccount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subAccount", lhsSubAccount), LocatorUtils.property(thatLocator, "subAccount", rhsSubAccount), lhsSubAccount, rhsSubAccount, (this.subAccount!= null), (that.subAccount!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsParentRef;
            lhsParentRef = this.getParentRef();
            ReferenceType rhsParentRef;
            rhsParentRef = that.getParentRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parentRef", lhsParentRef), LocatorUtils.property(thatLocator, "parentRef", rhsParentRef), lhsParentRef, rhsParentRef, (this.parentRef!= null), (that.parentRef!= null))) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription, (this.description!= null), (that.description!= null))) {
                return false;
            }
        }
        {
            String lhsFullyQualifiedName;
            lhsFullyQualifiedName = this.getFullyQualifiedName();
            String rhsFullyQualifiedName;
            rhsFullyQualifiedName = that.getFullyQualifiedName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fullyQualifiedName", lhsFullyQualifiedName), LocatorUtils.property(thatLocator, "fullyQualifiedName", rhsFullyQualifiedName), lhsFullyQualifiedName, rhsFullyQualifiedName, (this.fullyQualifiedName!= null), (that.fullyQualifiedName!= null))) {
                return false;
            }
        }
        {
            String lhsAccountAlias;
            lhsAccountAlias = this.getAccountAlias();
            String rhsAccountAlias;
            rhsAccountAlias = that.getAccountAlias();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountAlias", lhsAccountAlias), LocatorUtils.property(thatLocator, "accountAlias", rhsAccountAlias), lhsAccountAlias, rhsAccountAlias, (this.accountAlias!= null), (that.accountAlias!= null))) {
                return false;
            }
        }
        {
            String lhsTxnLocationType;
            lhsTxnLocationType = this.getTxnLocationType();
            String rhsTxnLocationType;
            rhsTxnLocationType = that.getTxnLocationType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnLocationType", lhsTxnLocationType), LocatorUtils.property(thatLocator, "txnLocationType", rhsTxnLocationType), lhsTxnLocationType, rhsTxnLocationType, (this.txnLocationType!= null), (that.txnLocationType!= null))) {
                return false;
            }
        }
        {
            Boolean lhsActive;
            lhsActive = this.isActive();
            Boolean rhsActive;
            rhsActive = that.isActive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "active", lhsActive), LocatorUtils.property(thatLocator, "active", rhsActive), lhsActive, rhsActive, (this.active!= null), (that.active!= null))) {
                return false;
            }
        }
        {
            AccountClassificationEnum lhsClassification;
            lhsClassification = this.getClassification();
            AccountClassificationEnum rhsClassification;
            rhsClassification = that.getClassification();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classification", lhsClassification), LocatorUtils.property(thatLocator, "classification", rhsClassification), lhsClassification, rhsClassification, (this.classification!= null), (that.classification!= null))) {
                return false;
            }
        }
        {
            AccountTypeEnum lhsAccountType;
            lhsAccountType = this.getAccountType();
            AccountTypeEnum rhsAccountType;
            rhsAccountType = that.getAccountType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountType", lhsAccountType), LocatorUtils.property(thatLocator, "accountType", rhsAccountType), lhsAccountType, rhsAccountType, (this.accountType!= null), (that.accountType!= null))) {
                return false;
            }
        }
        {
            String lhsAccountSubType;
            lhsAccountSubType = this.getAccountSubType();
            String rhsAccountSubType;
            rhsAccountSubType = that.getAccountSubType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountSubType", lhsAccountSubType), LocatorUtils.property(thatLocator, "accountSubType", rhsAccountSubType), lhsAccountSubType, rhsAccountSubType, (this.accountSubType!= null), (that.accountSubType!= null))) {
                return false;
            }
        }
        {
            List<ReferenceType> lhsAccountPurposes;
            lhsAccountPurposes = (((this.accountPurposes!= null)&&(!this.accountPurposes.isEmpty()))?this.getAccountPurposes():null);
            List<ReferenceType> rhsAccountPurposes;
            rhsAccountPurposes = (((that.accountPurposes!= null)&&(!that.accountPurposes.isEmpty()))?that.getAccountPurposes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountPurposes", lhsAccountPurposes), LocatorUtils.property(thatLocator, "accountPurposes", rhsAccountPurposes), lhsAccountPurposes, rhsAccountPurposes, ((this.accountPurposes!= null)&&(!this.accountPurposes.isEmpty())), ((that.accountPurposes!= null)&&(!that.accountPurposes.isEmpty())))) {
                return false;
            }
        }
        {
            String lhsAcctNum;
            lhsAcctNum = this.getAcctNum();
            String rhsAcctNum;
            rhsAcctNum = that.getAcctNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acctNum", lhsAcctNum), LocatorUtils.property(thatLocator, "acctNum", rhsAcctNum), lhsAcctNum, rhsAcctNum, (this.acctNum!= null), (that.acctNum!= null))) {
                return false;
            }
        }
        {
            String lhsAcctNumExtn;
            lhsAcctNumExtn = this.getAcctNumExtn();
            String rhsAcctNumExtn;
            rhsAcctNumExtn = that.getAcctNumExtn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acctNumExtn", lhsAcctNumExtn), LocatorUtils.property(thatLocator, "acctNumExtn", rhsAcctNumExtn), lhsAcctNumExtn, rhsAcctNumExtn, (this.acctNumExtn!= null), (that.acctNumExtn!= null))) {
                return false;
            }
        }
        {
            String lhsBankNum;
            lhsBankNum = this.getBankNum();
            String rhsBankNum;
            rhsBankNum = that.getBankNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bankNum", lhsBankNum), LocatorUtils.property(thatLocator, "bankNum", rhsBankNum), lhsBankNum, rhsBankNum, (this.bankNum!= null), (that.bankNum!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsOpeningBalance;
            lhsOpeningBalance = this.getOpeningBalance();
            BigDecimal rhsOpeningBalance;
            rhsOpeningBalance = that.getOpeningBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openingBalance", lhsOpeningBalance), LocatorUtils.property(thatLocator, "openingBalance", rhsOpeningBalance), lhsOpeningBalance, rhsOpeningBalance, (this.openingBalance!= null), (that.openingBalance!= null))) {
                return false;
            }
        }
        {
            Date lhsOpeningBalanceDate;
            lhsOpeningBalanceDate = this.getOpeningBalanceDate();
            Date rhsOpeningBalanceDate;
            rhsOpeningBalanceDate = that.getOpeningBalanceDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openingBalanceDate", lhsOpeningBalanceDate), LocatorUtils.property(thatLocator, "openingBalanceDate", rhsOpeningBalanceDate), lhsOpeningBalanceDate, rhsOpeningBalanceDate, (this.openingBalanceDate!= null), (that.openingBalanceDate!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsCurrentBalance;
            lhsCurrentBalance = this.getCurrentBalance();
            BigDecimal rhsCurrentBalance;
            rhsCurrentBalance = that.getCurrentBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentBalance", lhsCurrentBalance), LocatorUtils.property(thatLocator, "currentBalance", rhsCurrentBalance), lhsCurrentBalance, rhsCurrentBalance, (this.currentBalance!= null), (that.currentBalance!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsCurrentBalanceWithSubAccounts;
            lhsCurrentBalanceWithSubAccounts = this.getCurrentBalanceWithSubAccounts();
            BigDecimal rhsCurrentBalanceWithSubAccounts;
            rhsCurrentBalanceWithSubAccounts = that.getCurrentBalanceWithSubAccounts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentBalanceWithSubAccounts", lhsCurrentBalanceWithSubAccounts), LocatorUtils.property(thatLocator, "currentBalanceWithSubAccounts", rhsCurrentBalanceWithSubAccounts), lhsCurrentBalanceWithSubAccounts, rhsCurrentBalanceWithSubAccounts, (this.currentBalanceWithSubAccounts!= null), (that.currentBalanceWithSubAccounts!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsCurrencyRef;
            lhsCurrencyRef = this.getCurrencyRef();
            ReferenceType rhsCurrencyRef;
            rhsCurrencyRef = that.getCurrencyRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyRef", lhsCurrencyRef), LocatorUtils.property(thatLocator, "currencyRef", rhsCurrencyRef), lhsCurrencyRef, rhsCurrencyRef, (this.currencyRef!= null), (that.currencyRef!= null))) {
                return false;
            }
        }
        {
            Boolean lhsTaxAccount;
            lhsTaxAccount = this.isTaxAccount();
            Boolean rhsTaxAccount;
            rhsTaxAccount = that.isTaxAccount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxAccount", lhsTaxAccount), LocatorUtils.property(thatLocator, "taxAccount", rhsTaxAccount), lhsTaxAccount, rhsTaxAccount, (this.taxAccount!= null), (that.taxAccount!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsTaxCodeRef;
            lhsTaxCodeRef = this.getTaxCodeRef();
            ReferenceType rhsTaxCodeRef;
            rhsTaxCodeRef = that.getTaxCodeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxCodeRef", lhsTaxCodeRef), LocatorUtils.property(thatLocator, "taxCodeRef", rhsTaxCodeRef), lhsTaxCodeRef, rhsTaxCodeRef, (this.taxCodeRef!= null), (that.taxCodeRef!= null))) {
                return false;
            }
        }
        {
            Boolean lhsOnlineBankingEnabled;
            lhsOnlineBankingEnabled = this.isOnlineBankingEnabled();
            Boolean rhsOnlineBankingEnabled;
            rhsOnlineBankingEnabled = that.isOnlineBankingEnabled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "onlineBankingEnabled", lhsOnlineBankingEnabled), LocatorUtils.property(thatLocator, "onlineBankingEnabled", rhsOnlineBankingEnabled), lhsOnlineBankingEnabled, rhsOnlineBankingEnabled, (this.onlineBankingEnabled!= null), (that.onlineBankingEnabled!= null))) {
                return false;
            }
        }
        {
            String lhsFIName;
            lhsFIName = this.getFIName();
            String rhsFIName;
            rhsFIName = that.getFIName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fiName", lhsFIName), LocatorUtils.property(thatLocator, "fiName", rhsFIName), lhsFIName, rhsFIName, (this.fiName!= null), (that.fiName!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsJournalCodeRef;
            lhsJournalCodeRef = this.getJournalCodeRef();
            ReferenceType rhsJournalCodeRef;
            rhsJournalCodeRef = that.getJournalCodeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "journalCodeRef", lhsJournalCodeRef), LocatorUtils.property(thatLocator, "journalCodeRef", rhsJournalCodeRef), lhsJournalCodeRef, rhsJournalCodeRef, (this.journalCodeRef!= null), (that.journalCodeRef!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsAccountEx;
            lhsAccountEx = this.getAccountEx();
            IntuitAnyType rhsAccountEx;
            rhsAccountEx = that.getAccountEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountEx", lhsAccountEx), LocatorUtils.property(thatLocator, "accountEx", rhsAccountEx), lhsAccountEx, rhsAccountEx, (this.accountEx!= null), (that.accountEx!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName, (this.name!= null));
        }
        {
            Boolean theSubAccount;
            theSubAccount = this.isSubAccount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subAccount", theSubAccount), currentHashCode, theSubAccount, (this.subAccount!= null));
        }
        {
            ReferenceType theParentRef;
            theParentRef = this.getParentRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parentRef", theParentRef), currentHashCode, theParentRef, (this.parentRef!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription, (this.description!= null));
        }
        {
            String theFullyQualifiedName;
            theFullyQualifiedName = this.getFullyQualifiedName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fullyQualifiedName", theFullyQualifiedName), currentHashCode, theFullyQualifiedName, (this.fullyQualifiedName!= null));
        }
        {
            String theAccountAlias;
            theAccountAlias = this.getAccountAlias();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountAlias", theAccountAlias), currentHashCode, theAccountAlias, (this.accountAlias!= null));
        }
        {
            String theTxnLocationType;
            theTxnLocationType = this.getTxnLocationType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnLocationType", theTxnLocationType), currentHashCode, theTxnLocationType, (this.txnLocationType!= null));
        }
        {
            Boolean theActive;
            theActive = this.isActive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "active", theActive), currentHashCode, theActive, (this.active!= null));
        }
        {
            AccountClassificationEnum theClassification;
            theClassification = this.getClassification();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classification", theClassification), currentHashCode, theClassification, (this.classification!= null));
        }
        {
            AccountTypeEnum theAccountType;
            theAccountType = this.getAccountType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountType", theAccountType), currentHashCode, theAccountType, (this.accountType!= null));
        }
        {
            String theAccountSubType;
            theAccountSubType = this.getAccountSubType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountSubType", theAccountSubType), currentHashCode, theAccountSubType, (this.accountSubType!= null));
        }
        {
            List<ReferenceType> theAccountPurposes;
            theAccountPurposes = (((this.accountPurposes!= null)&&(!this.accountPurposes.isEmpty()))?this.getAccountPurposes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountPurposes", theAccountPurposes), currentHashCode, theAccountPurposes, ((this.accountPurposes!= null)&&(!this.accountPurposes.isEmpty())));
        }
        {
            String theAcctNum;
            theAcctNum = this.getAcctNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acctNum", theAcctNum), currentHashCode, theAcctNum, (this.acctNum!= null));
        }
        {
            String theAcctNumExtn;
            theAcctNumExtn = this.getAcctNumExtn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acctNumExtn", theAcctNumExtn), currentHashCode, theAcctNumExtn, (this.acctNumExtn!= null));
        }
        {
            String theBankNum;
            theBankNum = this.getBankNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankNum", theBankNum), currentHashCode, theBankNum, (this.bankNum!= null));
        }
        {
            BigDecimal theOpeningBalance;
            theOpeningBalance = this.getOpeningBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingBalance", theOpeningBalance), currentHashCode, theOpeningBalance, (this.openingBalance!= null));
        }
        {
            Date theOpeningBalanceDate;
            theOpeningBalanceDate = this.getOpeningBalanceDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingBalanceDate", theOpeningBalanceDate), currentHashCode, theOpeningBalanceDate, (this.openingBalanceDate!= null));
        }
        {
            BigDecimal theCurrentBalance;
            theCurrentBalance = this.getCurrentBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentBalance", theCurrentBalance), currentHashCode, theCurrentBalance, (this.currentBalance!= null));
        }
        {
            BigDecimal theCurrentBalanceWithSubAccounts;
            theCurrentBalanceWithSubAccounts = this.getCurrentBalanceWithSubAccounts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentBalanceWithSubAccounts", theCurrentBalanceWithSubAccounts), currentHashCode, theCurrentBalanceWithSubAccounts, (this.currentBalanceWithSubAccounts!= null));
        }
        {
            ReferenceType theCurrencyRef;
            theCurrencyRef = this.getCurrencyRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyRef", theCurrencyRef), currentHashCode, theCurrencyRef, (this.currencyRef!= null));
        }
        {
            Boolean theTaxAccount;
            theTaxAccount = this.isTaxAccount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxAccount", theTaxAccount), currentHashCode, theTaxAccount, (this.taxAccount!= null));
        }
        {
            ReferenceType theTaxCodeRef;
            theTaxCodeRef = this.getTaxCodeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxCodeRef", theTaxCodeRef), currentHashCode, theTaxCodeRef, (this.taxCodeRef!= null));
        }
        {
            Boolean theOnlineBankingEnabled;
            theOnlineBankingEnabled = this.isOnlineBankingEnabled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "onlineBankingEnabled", theOnlineBankingEnabled), currentHashCode, theOnlineBankingEnabled, (this.onlineBankingEnabled!= null));
        }
        {
            String theFIName;
            theFIName = this.getFIName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fiName", theFIName), currentHashCode, theFIName, (this.fiName!= null));
        }
        {
            ReferenceType theJournalCodeRef;
            theJournalCodeRef = this.getJournalCodeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "journalCodeRef", theJournalCodeRef), currentHashCode, theJournalCodeRef, (this.journalCodeRef!= null));
        }
        {
            IntuitAnyType theAccountEx;
            theAccountEx = this.getAccountEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountEx", theAccountEx), currentHashCode, theAccountEx, (this.accountEx!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
