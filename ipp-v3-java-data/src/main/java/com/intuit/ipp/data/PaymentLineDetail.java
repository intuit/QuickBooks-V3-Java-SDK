//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 * 				Product: ALL
 * 				Description: Payment detail for a
 * 				transaction line.
 * 			
 * 
 * <p>Java class for PaymentLineDetail complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentLineDetail"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ItemRef" type="{http://schema.intuit.com/finance/v3}ReferenceType"/&gt;
 *         &lt;element name="ServiceDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="ClassRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Balance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="HomeBalance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="Discount" type="{http://schema.intuit.com/finance/v3}DiscountOverride" minOccurs="0"/&gt;
 *         &lt;element name="PaymentLineEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentLineDetail", propOrder = {
    "itemRef",
    "serviceDate",
    "classRef",
    "balance",
    "homeBalance",
    "discount",
    "paymentLineEx"
})
public class PaymentLineDetail implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ItemRef", required = true)
    protected ReferenceType itemRef;
    @XmlElement(name = "ServiceDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date serviceDate;
    @XmlElement(name = "ClassRef")
    protected ReferenceType classRef;
    @XmlElement(name = "Balance")
    protected BigDecimal balance;
    @XmlElement(name = "HomeBalance")
    protected BigDecimal homeBalance;
    @XmlElement(name = "Discount")
    protected DiscountOverride discount;
    @XmlElement(name = "PaymentLineEx")
    protected IntuitAnyType paymentLineEx;

    /**
     * Gets the value of the itemRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getItemRef() {
        return itemRef;
    }

    /**
     * Sets the value of the itemRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setItemRef(ReferenceType value) {
        this.itemRef = value;
    }

    /**
     * Gets the value of the serviceDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getServiceDate() {
        return serviceDate;
    }

    /**
     * Sets the value of the serviceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setServiceDate(Date value) {
        this.serviceDate = value;
    }

    /**
     * Gets the value of the classRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getClassRef() {
        return classRef;
    }

    /**
     * Sets the value of the classRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setClassRef(ReferenceType value) {
        this.classRef = value;
    }

    /**
     * Gets the value of the balance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBalance() {
        return balance;
    }

    /**
     * Sets the value of the balance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBalance(BigDecimal value) {
        this.balance = value;
    }

    /**
     * Gets the value of the homeBalance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getHomeBalance() {
        return homeBalance;
    }

    /**
     * Sets the value of the homeBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setHomeBalance(BigDecimal value) {
        this.homeBalance = value;
    }

    /**
     * Gets the value of the discount property.
     * 
     * @return
     *     possible object is
     *     {@link DiscountOverride }
     *     
     */
    public DiscountOverride getDiscount() {
        return discount;
    }

    /**
     * Sets the value of the discount property.
     * 
     * @param value
     *     allowed object is
     *     {@link DiscountOverride }
     *     
     */
    public void setDiscount(DiscountOverride value) {
        this.discount = value;
    }

    /**
     * Gets the value of the paymentLineEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getPaymentLineEx() {
        return paymentLineEx;
    }

    /**
     * Sets the value of the paymentLineEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setPaymentLineEx(IntuitAnyType value) {
        this.paymentLineEx = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentLineDetail that = ((PaymentLineDetail) object);
        {
            ReferenceType lhsItemRef;
            lhsItemRef = this.getItemRef();
            ReferenceType rhsItemRef;
            rhsItemRef = that.getItemRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRef", lhsItemRef), LocatorUtils.property(thatLocator, "itemRef", rhsItemRef), lhsItemRef, rhsItemRef, (this.itemRef!= null), (that.itemRef!= null))) {
                return false;
            }
        }
        {
            Date lhsServiceDate;
            lhsServiceDate = this.getServiceDate();
            Date rhsServiceDate;
            rhsServiceDate = that.getServiceDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "serviceDate", lhsServiceDate), LocatorUtils.property(thatLocator, "serviceDate", rhsServiceDate), lhsServiceDate, rhsServiceDate, (this.serviceDate!= null), (that.serviceDate!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsClassRef;
            lhsClassRef = this.getClassRef();
            ReferenceType rhsClassRef;
            rhsClassRef = that.getClassRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classRef", lhsClassRef), LocatorUtils.property(thatLocator, "classRef", rhsClassRef), lhsClassRef, rhsClassRef, (this.classRef!= null), (that.classRef!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsBalance;
            lhsBalance = this.getBalance();
            BigDecimal rhsBalance;
            rhsBalance = that.getBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "balance", lhsBalance), LocatorUtils.property(thatLocator, "balance", rhsBalance), lhsBalance, rhsBalance, (this.balance!= null), (that.balance!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsHomeBalance;
            lhsHomeBalance = this.getHomeBalance();
            BigDecimal rhsHomeBalance;
            rhsHomeBalance = that.getHomeBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "homeBalance", lhsHomeBalance), LocatorUtils.property(thatLocator, "homeBalance", rhsHomeBalance), lhsHomeBalance, rhsHomeBalance, (this.homeBalance!= null), (that.homeBalance!= null))) {
                return false;
            }
        }
        {
            DiscountOverride lhsDiscount;
            lhsDiscount = this.getDiscount();
            DiscountOverride rhsDiscount;
            rhsDiscount = that.getDiscount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "discount", lhsDiscount), LocatorUtils.property(thatLocator, "discount", rhsDiscount), lhsDiscount, rhsDiscount, (this.discount!= null), (that.discount!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsPaymentLineEx;
            lhsPaymentLineEx = this.getPaymentLineEx();
            IntuitAnyType rhsPaymentLineEx;
            rhsPaymentLineEx = that.getPaymentLineEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentLineEx", lhsPaymentLineEx), LocatorUtils.property(thatLocator, "paymentLineEx", rhsPaymentLineEx), lhsPaymentLineEx, rhsPaymentLineEx, (this.paymentLineEx!= null), (that.paymentLineEx!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            ReferenceType theItemRef;
            theItemRef = this.getItemRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRef", theItemRef), currentHashCode, theItemRef, (this.itemRef!= null));
        }
        {
            Date theServiceDate;
            theServiceDate = this.getServiceDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "serviceDate", theServiceDate), currentHashCode, theServiceDate, (this.serviceDate!= null));
        }
        {
            ReferenceType theClassRef;
            theClassRef = this.getClassRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classRef", theClassRef), currentHashCode, theClassRef, (this.classRef!= null));
        }
        {
            BigDecimal theBalance;
            theBalance = this.getBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "balance", theBalance), currentHashCode, theBalance, (this.balance!= null));
        }
        {
            BigDecimal theHomeBalance;
            theHomeBalance = this.getHomeBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "homeBalance", theHomeBalance), currentHashCode, theHomeBalance, (this.homeBalance!= null));
        }
        {
            DiscountOverride theDiscount;
            theDiscount = this.getDiscount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "discount", theDiscount), currentHashCode, theDiscount, (this.discount!= null));
        }
        {
            IntuitAnyType thePaymentLineEx;
            thePaymentLineEx = this.getPaymentLineEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentLineEx", thePaymentLineEx), currentHashCode, thePaymentLineEx, (this.paymentLineEx!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
