//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 * 				Product: QBO
 * 				Description: The Item resource
 * 				represents any product or service that is sold or purchased.
 * 				Inventory items are not currently supported.
 * 				Product: QBW
 * 				Description: An item is a thing that your company buys, sells,
 * 				or re-sells, such as products, shipping and handling charges,
 * 				discounts, and sales tax (if applicable). An item is shown as a line
 * 				on an invoice or other sales form. The Item.Type property, which
 * 				specifies how the item is used, may have one of the following
 * 				values: [li]Assembly: The Assembly item allows you combine inventory
 * 				part items and other assembly items (subassemblies) into a single
 * 				item by defining a Bill of Materials, that lists the component parts
 * 				of the assembly item. You can also include the cost of building the
 * 				assembly item by adding the non-inventory part items, service items,
 * 				and other charge items to the Bill of Materials. [/li][li] Fixed
 * 				Asset: The Fixed Asset item represents those business assets that
 * 				you do not convert to cash one year of normal operation. A fixed
 * 				asset is usually something that is integral to your business
 * 				operations. For example, a truck or computer. [/li][li]Group: The
 * 				Group item helps you to quickly enter a group of individual items
 * 				that you often purchase or sell together. [li]Inventory: The
 * 				Inventory item is used to track merchandise which your business
 * 				purchases, stocks as inventory, and re-sells. QuickBooks tracks the
 * 				current number of inventory items in stock and the average value of
 * 				the inventory after the purchase and sale of every item.
 * 				[/li][li]Other Charge: The Other Charge item is used to charge
 * 				customers for the mileage expense.[/li] [li]Product The Product item
 * 				is used to record the sales information of a product.
 * 				[/li][li]Payment: The Payment item subtracts the amount of a
 * 				customer payment from the total amount of an invoice or statement.
 * 				You must create a payment item if you receive payment for an invoice
 * 				or statement in parts. If you receive full payment at the time of
 * 				sale, use a sales receipt form instead of an invoice with a payment
 * 				item.[/li] [li]Service: The Service item is used for the services
 * 				that you charge on the purchase. For example, including specialized
 * 				labor, consulting hours, and professional fees. [/li][li]Subtotal:
 * 				The Subtotal item is used when you want the total of all the items.
 * 				You can use this item to apply a percentage discount or
 * 				surcharge.[/li]
 * 				Business Rules: [li]The item name must be unique.
 * 				[/li][li]The item type must not be NULL. [/li][li]The item cannot
 * 				define both unit price and unit price percent simultaneously.
 * 				[/li][li]For the Service, Product, and Other Charge items, you must
 * 				specify the ID or name of the expense account or both. [/li][li]If
 * 				the purchase order cost is specified for the Service, Product, and
 * 				Other Charge items, you must specify the ID or name of the expense
 * 				account or both.[/li] For the Inventory and Assembly items, you must
 * 				specify: [li]the ID or name of the income account or both
 * 				[/li][li]the ID or name of the cogs account or both [/li][li]the ID
 * 				or name of the asset account or both [/li][li]For the Group item,
 * 				you must specify the tax ID or tax name or both.[/li] For the Fixed
 * 				Asset item, you must: [li]set the asset account type to Asset[/li]
 * 				[li]specify the purchase date [/li][li]specify the ID or name of the
 * 				income account or both[/li]
 * 			
 * 
 * <p>Java class for Item complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Item"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}IntuitEntity"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Sku" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Active" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SubItem" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="ParentRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Level" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="FullyQualifiedName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Taxable" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SalesTaxIncluded" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="PercentBased" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="UnitPrice" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="RatePercent" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="Type" type="{http://schema.intuit.com/finance/v3}ItemTypeEnum" minOccurs="0"/&gt;
 *         &lt;element name="PaymentMethodRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="UOMSetRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="IncomeAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="PurchaseDesc" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="PurchaseTaxIncluded" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="PurchaseCost" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="ExpenseAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="COGSAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="AssetAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="PrefVendorRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="AvgCost" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="TrackQtyOnHand" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="QtyOnHand" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="QtyOnPurchaseOrder" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="QtyOnSalesOrder" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="ReorderPoint" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="ManPartNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="DepositToAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="SalesTaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="PurchaseTaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="InvStartDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="BuildPoint" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="PrintGroupedItems" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SpecialItem" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SpecialItemType" type="{http://schema.intuit.com/finance/v3}SpecialItemTypeEnum" minOccurs="0"/&gt;
 *         &lt;element name="ItemGroupDetail" type="{http://schema.intuit.com/finance/v3}ItemGroupDetail" minOccurs="0"/&gt;
 *         &lt;element name="ItemAssemblyDetail" type="{http://schema.intuit.com/finance/v3}ItemAssemblyDetail" minOccurs="0"/&gt;
 *         &lt;element name="AbatementRate" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="ReverseChargeRate" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="ServiceType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ItemCategoryType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ItemEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *         &lt;element name="TaxClassificationRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="UQCDisplayText" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="UQCId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ClassRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Source" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="DeferredRevenue" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Item", propOrder = {
    "name",
    "sku",
    "description",
    "active",
    "subItem",
    "parentRef",
    "level",
    "fullyQualifiedName",
    "taxable",
    "salesTaxIncluded",
    "percentBased",
    "unitPrice",
    "ratePercent",
    "type",
    "paymentMethodRef",
    "uomSetRef",
    "incomeAccountRef",
    "purchaseDesc",
    "purchaseTaxIncluded",
    "purchaseCost",
    "expenseAccountRef",
    "cogsAccountRef",
    "assetAccountRef",
    "prefVendorRef",
    "avgCost",
    "trackQtyOnHand",
    "qtyOnHand",
    "qtyOnPurchaseOrder",
    "qtyOnSalesOrder",
    "reorderPoint",
    "manPartNum",
    "depositToAccountRef",
    "salesTaxCodeRef",
    "purchaseTaxCodeRef",
    "invStartDate",
    "buildPoint",
    "printGroupedItems",
    "specialItem",
    "specialItemType",
    "itemGroupDetail",
    "itemAssemblyDetail",
    "abatementRate",
    "reverseChargeRate",
    "serviceType",
    "itemCategoryType",
    "itemEx",
    "taxClassificationRef",
    "uqcDisplayText",
    "uqcId",
    "classRef",
    "source",
    "deferredRevenue"
})
public class Item
    extends IntuitEntity
    implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Name")
    protected String name;
    @XmlElement(name = "Sku")
    protected String sku;
    @XmlElement(name = "Description")
    protected String description;
    @XmlElement(name = "Active")
    protected Boolean active;
    @XmlElement(name = "SubItem")
    protected Boolean subItem;
    @XmlElement(name = "ParentRef")
    protected ReferenceType parentRef;
    @XmlElement(name = "Level")
    protected Integer level;
    @XmlElement(name = "FullyQualifiedName")
    protected String fullyQualifiedName;
    @XmlElement(name = "Taxable")
    protected Boolean taxable;
    @XmlElement(name = "SalesTaxIncluded")
    protected Boolean salesTaxIncluded;
    @XmlElement(name = "PercentBased")
    protected Boolean percentBased;
    @XmlElement(name = "UnitPrice")
    protected BigDecimal unitPrice;
    @XmlElement(name = "RatePercent")
    protected BigDecimal ratePercent;
    @XmlElement(name = "Type")
    @XmlSchemaType(name = "string")
    protected ItemTypeEnum type;
    @XmlElement(name = "PaymentMethodRef")
    protected ReferenceType paymentMethodRef;
    @XmlElement(name = "UOMSetRef")
    protected ReferenceType uomSetRef;
    @XmlElement(name = "IncomeAccountRef")
    protected ReferenceType incomeAccountRef;
    @XmlElement(name = "PurchaseDesc")
    protected String purchaseDesc;
    @XmlElement(name = "PurchaseTaxIncluded")
    protected Boolean purchaseTaxIncluded;
    @XmlElement(name = "PurchaseCost")
    protected BigDecimal purchaseCost;
    @XmlElement(name = "ExpenseAccountRef")
    protected ReferenceType expenseAccountRef;
    @XmlElement(name = "COGSAccountRef")
    protected ReferenceType cogsAccountRef;
    @XmlElement(name = "AssetAccountRef")
    protected ReferenceType assetAccountRef;
    @XmlElement(name = "PrefVendorRef")
    protected ReferenceType prefVendorRef;
    @XmlElement(name = "AvgCost")
    protected BigDecimal avgCost;
    @XmlElement(name = "TrackQtyOnHand")
    protected Boolean trackQtyOnHand;
    @XmlElement(name = "QtyOnHand")
    protected BigDecimal qtyOnHand;
    @XmlElement(name = "QtyOnPurchaseOrder")
    protected BigDecimal qtyOnPurchaseOrder;
    @XmlElement(name = "QtyOnSalesOrder")
    protected BigDecimal qtyOnSalesOrder;
    @XmlElement(name = "ReorderPoint")
    protected BigDecimal reorderPoint;
    @XmlElement(name = "ManPartNum")
    protected String manPartNum;
    @XmlElement(name = "DepositToAccountRef")
    protected ReferenceType depositToAccountRef;
    @XmlElement(name = "SalesTaxCodeRef")
    protected ReferenceType salesTaxCodeRef;
    @XmlElement(name = "PurchaseTaxCodeRef")
    protected ReferenceType purchaseTaxCodeRef;
    @XmlElement(name = "InvStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date invStartDate;
    @XmlElement(name = "BuildPoint")
    protected BigDecimal buildPoint;
    @XmlElement(name = "PrintGroupedItems")
    protected Boolean printGroupedItems;
    @XmlElement(name = "SpecialItem")
    protected Boolean specialItem;
    @XmlElement(name = "SpecialItemType")
    @XmlSchemaType(name = "string")
    protected SpecialItemTypeEnum specialItemType;
    @XmlElement(name = "ItemGroupDetail")
    protected ItemGroupDetail itemGroupDetail;
    @XmlElement(name = "ItemAssemblyDetail")
    protected ItemAssemblyDetail itemAssemblyDetail;
    @XmlElement(name = "AbatementRate")
    protected BigDecimal abatementRate;
    @XmlElement(name = "ReverseChargeRate")
    protected BigDecimal reverseChargeRate;
    @XmlElement(name = "ServiceType")
    protected String serviceType;
    @XmlElement(name = "ItemCategoryType")
    protected String itemCategoryType;
    @XmlElement(name = "ItemEx")
    protected IntuitAnyType itemEx;
    @XmlElement(name = "TaxClassificationRef")
    protected ReferenceType taxClassificationRef;
    @XmlElement(name = "UQCDisplayText")
    protected String uqcDisplayText;
    @XmlElement(name = "UQCId")
    protected String uqcId;
    @XmlElement(name = "ClassRef")
    protected ReferenceType classRef;
    @XmlElement(name = "Source")
    protected String source;
    @XmlElement(name = "DeferredRevenue")
    protected Boolean deferredRevenue;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the sku property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSku() {
        return sku;
    }

    /**
     * Sets the value of the sku property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSku(String value) {
        this.sku = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the active property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isActive() {
        return active;
    }

    /**
     * Sets the value of the active property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setActive(Boolean value) {
        this.active = value;
    }

    /**
     * Gets the value of the subItem property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSubItem() {
        return subItem;
    }

    /**
     * Sets the value of the subItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSubItem(Boolean value) {
        this.subItem = value;
    }

    /**
     * Gets the value of the parentRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getParentRef() {
        return parentRef;
    }

    /**
     * Sets the value of the parentRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setParentRef(ReferenceType value) {
        this.parentRef = value;
    }

    /**
     * Gets the value of the level property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getLevel() {
        return level;
    }

    /**
     * Sets the value of the level property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setLevel(Integer value) {
        this.level = value;
    }

    /**
     * Gets the value of the fullyQualifiedName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFullyQualifiedName() {
        return fullyQualifiedName;
    }

    /**
     * Sets the value of the fullyQualifiedName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFullyQualifiedName(String value) {
        this.fullyQualifiedName = value;
    }

    /**
     * Gets the value of the taxable property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTaxable() {
        return taxable;
    }

    /**
     * Sets the value of the taxable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTaxable(Boolean value) {
        this.taxable = value;
    }

    /**
     * Gets the value of the salesTaxIncluded property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSalesTaxIncluded() {
        return salesTaxIncluded;
    }

    /**
     * Sets the value of the salesTaxIncluded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSalesTaxIncluded(Boolean value) {
        this.salesTaxIncluded = value;
    }

    /**
     * Gets the value of the percentBased property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPercentBased() {
        return percentBased;
    }

    /**
     * Sets the value of the percentBased property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPercentBased(Boolean value) {
        this.percentBased = value;
    }

    /**
     * Gets the value of the unitPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    /**
     * Sets the value of the unitPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setUnitPrice(BigDecimal value) {
        this.unitPrice = value;
    }

    /**
     * Gets the value of the ratePercent property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getRatePercent() {
        return ratePercent;
    }

    /**
     * Sets the value of the ratePercent property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRatePercent(BigDecimal value) {
        this.ratePercent = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link ItemTypeEnum }
     *     
     */
    public ItemTypeEnum getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemTypeEnum }
     *     
     */
    public void setType(ItemTypeEnum value) {
        this.type = value;
    }

    /**
     * Gets the value of the paymentMethodRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getPaymentMethodRef() {
        return paymentMethodRef;
    }

    /**
     * Sets the value of the paymentMethodRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setPaymentMethodRef(ReferenceType value) {
        this.paymentMethodRef = value;
    }

    /**
     * Gets the value of the uomSetRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getUOMSetRef() {
        return uomSetRef;
    }

    /**
     * Sets the value of the uomSetRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setUOMSetRef(ReferenceType value) {
        this.uomSetRef = value;
    }

    /**
     * Gets the value of the incomeAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getIncomeAccountRef() {
        return incomeAccountRef;
    }

    /**
     * Sets the value of the incomeAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setIncomeAccountRef(ReferenceType value) {
        this.incomeAccountRef = value;
    }

    /**
     * Gets the value of the purchaseDesc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPurchaseDesc() {
        return purchaseDesc;
    }

    /**
     * Sets the value of the purchaseDesc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPurchaseDesc(String value) {
        this.purchaseDesc = value;
    }

    /**
     * Gets the value of the purchaseTaxIncluded property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPurchaseTaxIncluded() {
        return purchaseTaxIncluded;
    }

    /**
     * Sets the value of the purchaseTaxIncluded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPurchaseTaxIncluded(Boolean value) {
        this.purchaseTaxIncluded = value;
    }

    /**
     * Gets the value of the purchaseCost property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPurchaseCost() {
        return purchaseCost;
    }

    /**
     * Sets the value of the purchaseCost property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPurchaseCost(BigDecimal value) {
        this.purchaseCost = value;
    }

    /**
     * Gets the value of the expenseAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getExpenseAccountRef() {
        return expenseAccountRef;
    }

    /**
     * Sets the value of the expenseAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setExpenseAccountRef(ReferenceType value) {
        this.expenseAccountRef = value;
    }

    /**
     * Gets the value of the cogsAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getCOGSAccountRef() {
        return cogsAccountRef;
    }

    /**
     * Sets the value of the cogsAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setCOGSAccountRef(ReferenceType value) {
        this.cogsAccountRef = value;
    }

    /**
     * Gets the value of the assetAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getAssetAccountRef() {
        return assetAccountRef;
    }

    /**
     * Sets the value of the assetAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setAssetAccountRef(ReferenceType value) {
        this.assetAccountRef = value;
    }

    /**
     * Gets the value of the prefVendorRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getPrefVendorRef() {
        return prefVendorRef;
    }

    /**
     * Sets the value of the prefVendorRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setPrefVendorRef(ReferenceType value) {
        this.prefVendorRef = value;
    }

    /**
     * Gets the value of the avgCost property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAvgCost() {
        return avgCost;
    }

    /**
     * Sets the value of the avgCost property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAvgCost(BigDecimal value) {
        this.avgCost = value;
    }

    /**
     * Gets the value of the trackQtyOnHand property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTrackQtyOnHand() {
        return trackQtyOnHand;
    }

    /**
     * Sets the value of the trackQtyOnHand property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTrackQtyOnHand(Boolean value) {
        this.trackQtyOnHand = value;
    }

    /**
     * Gets the value of the qtyOnHand property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getQtyOnHand() {
        return qtyOnHand;
    }

    /**
     * Sets the value of the qtyOnHand property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setQtyOnHand(BigDecimal value) {
        this.qtyOnHand = value;
    }

    /**
     * Gets the value of the qtyOnPurchaseOrder property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getQtyOnPurchaseOrder() {
        return qtyOnPurchaseOrder;
    }

    /**
     * Sets the value of the qtyOnPurchaseOrder property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setQtyOnPurchaseOrder(BigDecimal value) {
        this.qtyOnPurchaseOrder = value;
    }

    /**
     * Gets the value of the qtyOnSalesOrder property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getQtyOnSalesOrder() {
        return qtyOnSalesOrder;
    }

    /**
     * Sets the value of the qtyOnSalesOrder property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setQtyOnSalesOrder(BigDecimal value) {
        this.qtyOnSalesOrder = value;
    }

    /**
     * Gets the value of the reorderPoint property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getReorderPoint() {
        return reorderPoint;
    }

    /**
     * Sets the value of the reorderPoint property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setReorderPoint(BigDecimal value) {
        this.reorderPoint = value;
    }

    /**
     * Gets the value of the manPartNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getManPartNum() {
        return manPartNum;
    }

    /**
     * Sets the value of the manPartNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setManPartNum(String value) {
        this.manPartNum = value;
    }

    /**
     * Gets the value of the depositToAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getDepositToAccountRef() {
        return depositToAccountRef;
    }

    /**
     * Sets the value of the depositToAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setDepositToAccountRef(ReferenceType value) {
        this.depositToAccountRef = value;
    }

    /**
     * Gets the value of the salesTaxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getSalesTaxCodeRef() {
        return salesTaxCodeRef;
    }

    /**
     * Sets the value of the salesTaxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setSalesTaxCodeRef(ReferenceType value) {
        this.salesTaxCodeRef = value;
    }

    /**
     * Gets the value of the purchaseTaxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getPurchaseTaxCodeRef() {
        return purchaseTaxCodeRef;
    }

    /**
     * Sets the value of the purchaseTaxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setPurchaseTaxCodeRef(ReferenceType value) {
        this.purchaseTaxCodeRef = value;
    }

    /**
     * Gets the value of the invStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getInvStartDate() {
        return invStartDate;
    }

    /**
     * Sets the value of the invStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInvStartDate(Date value) {
        this.invStartDate = value;
    }

    /**
     * Gets the value of the buildPoint property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBuildPoint() {
        return buildPoint;
    }

    /**
     * Sets the value of the buildPoint property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBuildPoint(BigDecimal value) {
        this.buildPoint = value;
    }

    /**
     * Gets the value of the printGroupedItems property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPrintGroupedItems() {
        return printGroupedItems;
    }

    /**
     * Sets the value of the printGroupedItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPrintGroupedItems(Boolean value) {
        this.printGroupedItems = value;
    }

    /**
     * Gets the value of the specialItem property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSpecialItem() {
        return specialItem;
    }

    /**
     * Sets the value of the specialItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSpecialItem(Boolean value) {
        this.specialItem = value;
    }

    /**
     * Gets the value of the specialItemType property.
     * 
     * @return
     *     possible object is
     *     {@link SpecialItemTypeEnum }
     *     
     */
    public SpecialItemTypeEnum getSpecialItemType() {
        return specialItemType;
    }

    /**
     * Sets the value of the specialItemType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpecialItemTypeEnum }
     *     
     */
    public void setSpecialItemType(SpecialItemTypeEnum value) {
        this.specialItemType = value;
    }

    /**
     * Gets the value of the itemGroupDetail property.
     * 
     * @return
     *     possible object is
     *     {@link ItemGroupDetail }
     *     
     */
    public ItemGroupDetail getItemGroupDetail() {
        return itemGroupDetail;
    }

    /**
     * Sets the value of the itemGroupDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemGroupDetail }
     *     
     */
    public void setItemGroupDetail(ItemGroupDetail value) {
        this.itemGroupDetail = value;
    }

    /**
     * Gets the value of the itemAssemblyDetail property.
     * 
     * @return
     *     possible object is
     *     {@link ItemAssemblyDetail }
     *     
     */
    public ItemAssemblyDetail getItemAssemblyDetail() {
        return itemAssemblyDetail;
    }

    /**
     * Sets the value of the itemAssemblyDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemAssemblyDetail }
     *     
     */
    public void setItemAssemblyDetail(ItemAssemblyDetail value) {
        this.itemAssemblyDetail = value;
    }

    /**
     * Gets the value of the abatementRate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAbatementRate() {
        return abatementRate;
    }

    /**
     * Sets the value of the abatementRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAbatementRate(BigDecimal value) {
        this.abatementRate = value;
    }

    /**
     * Gets the value of the reverseChargeRate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getReverseChargeRate() {
        return reverseChargeRate;
    }

    /**
     * Sets the value of the reverseChargeRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setReverseChargeRate(BigDecimal value) {
        this.reverseChargeRate = value;
    }

    /**
     * Gets the value of the serviceType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getServiceType() {
        return serviceType;
    }

    /**
     * Sets the value of the serviceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setServiceType(String value) {
        this.serviceType = value;
    }

    /**
     * Gets the value of the itemCategoryType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getItemCategoryType() {
        return itemCategoryType;
    }

    /**
     * Sets the value of the itemCategoryType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setItemCategoryType(String value) {
        this.itemCategoryType = value;
    }

    /**
     * Gets the value of the itemEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getItemEx() {
        return itemEx;
    }

    /**
     * Sets the value of the itemEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setItemEx(IntuitAnyType value) {
        this.itemEx = value;
    }

    /**
     * Gets the value of the taxClassificationRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTaxClassificationRef() {
        return taxClassificationRef;
    }

    /**
     * Sets the value of the taxClassificationRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTaxClassificationRef(ReferenceType value) {
        this.taxClassificationRef = value;
    }

    /**
     * Gets the value of the uqcDisplayText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUQCDisplayText() {
        return uqcDisplayText;
    }

    /**
     * Sets the value of the uqcDisplayText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUQCDisplayText(String value) {
        this.uqcDisplayText = value;
    }

    /**
     * Gets the value of the uqcId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUQCId() {
        return uqcId;
    }

    /**
     * Sets the value of the uqcId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUQCId(String value) {
        this.uqcId = value;
    }

    /**
     * Gets the value of the classRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getClassRef() {
        return classRef;
    }

    /**
     * Sets the value of the classRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setClassRef(ReferenceType value) {
        this.classRef = value;
    }

    /**
     * Gets the value of the source property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSource() {
        return source;
    }

    /**
     * Sets the value of the source property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSource(String value) {
        this.source = value;
    }

    /**
     * Gets the value of the deferredRevenue property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeferredRevenue() {
        return deferredRevenue;
    }

    /**
     * Sets the value of the deferredRevenue property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeferredRevenue(Boolean value) {
        this.deferredRevenue = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Item that = ((Item) object);
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName, (this.name!= null), (that.name!= null))) {
                return false;
            }
        }
        {
            String lhsSku;
            lhsSku = this.getSku();
            String rhsSku;
            rhsSku = that.getSku();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sku", lhsSku), LocatorUtils.property(thatLocator, "sku", rhsSku), lhsSku, rhsSku, (this.sku!= null), (that.sku!= null))) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription, (this.description!= null), (that.description!= null))) {
                return false;
            }
        }
        {
            Boolean lhsActive;
            lhsActive = this.isActive();
            Boolean rhsActive;
            rhsActive = that.isActive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "active", lhsActive), LocatorUtils.property(thatLocator, "active", rhsActive), lhsActive, rhsActive, (this.active!= null), (that.active!= null))) {
                return false;
            }
        }
        {
            Boolean lhsSubItem;
            lhsSubItem = this.isSubItem();
            Boolean rhsSubItem;
            rhsSubItem = that.isSubItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subItem", lhsSubItem), LocatorUtils.property(thatLocator, "subItem", rhsSubItem), lhsSubItem, rhsSubItem, (this.subItem!= null), (that.subItem!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsParentRef;
            lhsParentRef = this.getParentRef();
            ReferenceType rhsParentRef;
            rhsParentRef = that.getParentRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parentRef", lhsParentRef), LocatorUtils.property(thatLocator, "parentRef", rhsParentRef), lhsParentRef, rhsParentRef, (this.parentRef!= null), (that.parentRef!= null))) {
                return false;
            }
        }
        {
            Integer lhsLevel;
            lhsLevel = this.getLevel();
            Integer rhsLevel;
            rhsLevel = that.getLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "level", lhsLevel), LocatorUtils.property(thatLocator, "level", rhsLevel), lhsLevel, rhsLevel, (this.level!= null), (that.level!= null))) {
                return false;
            }
        }
        {
            String lhsFullyQualifiedName;
            lhsFullyQualifiedName = this.getFullyQualifiedName();
            String rhsFullyQualifiedName;
            rhsFullyQualifiedName = that.getFullyQualifiedName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fullyQualifiedName", lhsFullyQualifiedName), LocatorUtils.property(thatLocator, "fullyQualifiedName", rhsFullyQualifiedName), lhsFullyQualifiedName, rhsFullyQualifiedName, (this.fullyQualifiedName!= null), (that.fullyQualifiedName!= null))) {
                return false;
            }
        }
        {
            Boolean lhsTaxable;
            lhsTaxable = this.isTaxable();
            Boolean rhsTaxable;
            rhsTaxable = that.isTaxable();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxable", lhsTaxable), LocatorUtils.property(thatLocator, "taxable", rhsTaxable), lhsTaxable, rhsTaxable, (this.taxable!= null), (that.taxable!= null))) {
                return false;
            }
        }
        {
            Boolean lhsSalesTaxIncluded;
            lhsSalesTaxIncluded = this.isSalesTaxIncluded();
            Boolean rhsSalesTaxIncluded;
            rhsSalesTaxIncluded = that.isSalesTaxIncluded();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTaxIncluded", lhsSalesTaxIncluded), LocatorUtils.property(thatLocator, "salesTaxIncluded", rhsSalesTaxIncluded), lhsSalesTaxIncluded, rhsSalesTaxIncluded, (this.salesTaxIncluded!= null), (that.salesTaxIncluded!= null))) {
                return false;
            }
        }
        {
            Boolean lhsPercentBased;
            lhsPercentBased = this.isPercentBased();
            Boolean rhsPercentBased;
            rhsPercentBased = that.isPercentBased();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentBased", lhsPercentBased), LocatorUtils.property(thatLocator, "percentBased", rhsPercentBased), lhsPercentBased, rhsPercentBased, (this.percentBased!= null), (that.percentBased!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsUnitPrice;
            lhsUnitPrice = this.getUnitPrice();
            BigDecimal rhsUnitPrice;
            rhsUnitPrice = that.getUnitPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "unitPrice", lhsUnitPrice), LocatorUtils.property(thatLocator, "unitPrice", rhsUnitPrice), lhsUnitPrice, rhsUnitPrice, (this.unitPrice!= null), (that.unitPrice!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsRatePercent;
            lhsRatePercent = this.getRatePercent();
            BigDecimal rhsRatePercent;
            rhsRatePercent = that.getRatePercent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ratePercent", lhsRatePercent), LocatorUtils.property(thatLocator, "ratePercent", rhsRatePercent), lhsRatePercent, rhsRatePercent, (this.ratePercent!= null), (that.ratePercent!= null))) {
                return false;
            }
        }
        {
            ItemTypeEnum lhsType;
            lhsType = this.getType();
            ItemTypeEnum rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType, (this.type!= null), (that.type!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsPaymentMethodRef;
            lhsPaymentMethodRef = this.getPaymentMethodRef();
            ReferenceType rhsPaymentMethodRef;
            rhsPaymentMethodRef = that.getPaymentMethodRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentMethodRef", lhsPaymentMethodRef), LocatorUtils.property(thatLocator, "paymentMethodRef", rhsPaymentMethodRef), lhsPaymentMethodRef, rhsPaymentMethodRef, (this.paymentMethodRef!= null), (that.paymentMethodRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsUOMSetRef;
            lhsUOMSetRef = this.getUOMSetRef();
            ReferenceType rhsUOMSetRef;
            rhsUOMSetRef = that.getUOMSetRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uomSetRef", lhsUOMSetRef), LocatorUtils.property(thatLocator, "uomSetRef", rhsUOMSetRef), lhsUOMSetRef, rhsUOMSetRef, (this.uomSetRef!= null), (that.uomSetRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsIncomeAccountRef;
            lhsIncomeAccountRef = this.getIncomeAccountRef();
            ReferenceType rhsIncomeAccountRef;
            rhsIncomeAccountRef = that.getIncomeAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "incomeAccountRef", lhsIncomeAccountRef), LocatorUtils.property(thatLocator, "incomeAccountRef", rhsIncomeAccountRef), lhsIncomeAccountRef, rhsIncomeAccountRef, (this.incomeAccountRef!= null), (that.incomeAccountRef!= null))) {
                return false;
            }
        }
        {
            String lhsPurchaseDesc;
            lhsPurchaseDesc = this.getPurchaseDesc();
            String rhsPurchaseDesc;
            rhsPurchaseDesc = that.getPurchaseDesc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseDesc", lhsPurchaseDesc), LocatorUtils.property(thatLocator, "purchaseDesc", rhsPurchaseDesc), lhsPurchaseDesc, rhsPurchaseDesc, (this.purchaseDesc!= null), (that.purchaseDesc!= null))) {
                return false;
            }
        }
        {
            Boolean lhsPurchaseTaxIncluded;
            lhsPurchaseTaxIncluded = this.isPurchaseTaxIncluded();
            Boolean rhsPurchaseTaxIncluded;
            rhsPurchaseTaxIncluded = that.isPurchaseTaxIncluded();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseTaxIncluded", lhsPurchaseTaxIncluded), LocatorUtils.property(thatLocator, "purchaseTaxIncluded", rhsPurchaseTaxIncluded), lhsPurchaseTaxIncluded, rhsPurchaseTaxIncluded, (this.purchaseTaxIncluded!= null), (that.purchaseTaxIncluded!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsPurchaseCost;
            lhsPurchaseCost = this.getPurchaseCost();
            BigDecimal rhsPurchaseCost;
            rhsPurchaseCost = that.getPurchaseCost();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseCost", lhsPurchaseCost), LocatorUtils.property(thatLocator, "purchaseCost", rhsPurchaseCost), lhsPurchaseCost, rhsPurchaseCost, (this.purchaseCost!= null), (that.purchaseCost!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsExpenseAccountRef;
            lhsExpenseAccountRef = this.getExpenseAccountRef();
            ReferenceType rhsExpenseAccountRef;
            rhsExpenseAccountRef = that.getExpenseAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expenseAccountRef", lhsExpenseAccountRef), LocatorUtils.property(thatLocator, "expenseAccountRef", rhsExpenseAccountRef), lhsExpenseAccountRef, rhsExpenseAccountRef, (this.expenseAccountRef!= null), (that.expenseAccountRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsCOGSAccountRef;
            lhsCOGSAccountRef = this.getCOGSAccountRef();
            ReferenceType rhsCOGSAccountRef;
            rhsCOGSAccountRef = that.getCOGSAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cogsAccountRef", lhsCOGSAccountRef), LocatorUtils.property(thatLocator, "cogsAccountRef", rhsCOGSAccountRef), lhsCOGSAccountRef, rhsCOGSAccountRef, (this.cogsAccountRef!= null), (that.cogsAccountRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsAssetAccountRef;
            lhsAssetAccountRef = this.getAssetAccountRef();
            ReferenceType rhsAssetAccountRef;
            rhsAssetAccountRef = that.getAssetAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assetAccountRef", lhsAssetAccountRef), LocatorUtils.property(thatLocator, "assetAccountRef", rhsAssetAccountRef), lhsAssetAccountRef, rhsAssetAccountRef, (this.assetAccountRef!= null), (that.assetAccountRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsPrefVendorRef;
            lhsPrefVendorRef = this.getPrefVendorRef();
            ReferenceType rhsPrefVendorRef;
            rhsPrefVendorRef = that.getPrefVendorRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prefVendorRef", lhsPrefVendorRef), LocatorUtils.property(thatLocator, "prefVendorRef", rhsPrefVendorRef), lhsPrefVendorRef, rhsPrefVendorRef, (this.prefVendorRef!= null), (that.prefVendorRef!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsAvgCost;
            lhsAvgCost = this.getAvgCost();
            BigDecimal rhsAvgCost;
            rhsAvgCost = that.getAvgCost();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "avgCost", lhsAvgCost), LocatorUtils.property(thatLocator, "avgCost", rhsAvgCost), lhsAvgCost, rhsAvgCost, (this.avgCost!= null), (that.avgCost!= null))) {
                return false;
            }
        }
        {
            Boolean lhsTrackQtyOnHand;
            lhsTrackQtyOnHand = this.isTrackQtyOnHand();
            Boolean rhsTrackQtyOnHand;
            rhsTrackQtyOnHand = that.isTrackQtyOnHand();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trackQtyOnHand", lhsTrackQtyOnHand), LocatorUtils.property(thatLocator, "trackQtyOnHand", rhsTrackQtyOnHand), lhsTrackQtyOnHand, rhsTrackQtyOnHand, (this.trackQtyOnHand!= null), (that.trackQtyOnHand!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsQtyOnHand;
            lhsQtyOnHand = this.getQtyOnHand();
            BigDecimal rhsQtyOnHand;
            rhsQtyOnHand = that.getQtyOnHand();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qtyOnHand", lhsQtyOnHand), LocatorUtils.property(thatLocator, "qtyOnHand", rhsQtyOnHand), lhsQtyOnHand, rhsQtyOnHand, (this.qtyOnHand!= null), (that.qtyOnHand!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsQtyOnPurchaseOrder;
            lhsQtyOnPurchaseOrder = this.getQtyOnPurchaseOrder();
            BigDecimal rhsQtyOnPurchaseOrder;
            rhsQtyOnPurchaseOrder = that.getQtyOnPurchaseOrder();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qtyOnPurchaseOrder", lhsQtyOnPurchaseOrder), LocatorUtils.property(thatLocator, "qtyOnPurchaseOrder", rhsQtyOnPurchaseOrder), lhsQtyOnPurchaseOrder, rhsQtyOnPurchaseOrder, (this.qtyOnPurchaseOrder!= null), (that.qtyOnPurchaseOrder!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsQtyOnSalesOrder;
            lhsQtyOnSalesOrder = this.getQtyOnSalesOrder();
            BigDecimal rhsQtyOnSalesOrder;
            rhsQtyOnSalesOrder = that.getQtyOnSalesOrder();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qtyOnSalesOrder", lhsQtyOnSalesOrder), LocatorUtils.property(thatLocator, "qtyOnSalesOrder", rhsQtyOnSalesOrder), lhsQtyOnSalesOrder, rhsQtyOnSalesOrder, (this.qtyOnSalesOrder!= null), (that.qtyOnSalesOrder!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsReorderPoint;
            lhsReorderPoint = this.getReorderPoint();
            BigDecimal rhsReorderPoint;
            rhsReorderPoint = that.getReorderPoint();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reorderPoint", lhsReorderPoint), LocatorUtils.property(thatLocator, "reorderPoint", rhsReorderPoint), lhsReorderPoint, rhsReorderPoint, (this.reorderPoint!= null), (that.reorderPoint!= null))) {
                return false;
            }
        }
        {
            String lhsManPartNum;
            lhsManPartNum = this.getManPartNum();
            String rhsManPartNum;
            rhsManPartNum = that.getManPartNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "manPartNum", lhsManPartNum), LocatorUtils.property(thatLocator, "manPartNum", rhsManPartNum), lhsManPartNum, rhsManPartNum, (this.manPartNum!= null), (that.manPartNum!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsDepositToAccountRef;
            lhsDepositToAccountRef = this.getDepositToAccountRef();
            ReferenceType rhsDepositToAccountRef;
            rhsDepositToAccountRef = that.getDepositToAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "depositToAccountRef", lhsDepositToAccountRef), LocatorUtils.property(thatLocator, "depositToAccountRef", rhsDepositToAccountRef), lhsDepositToAccountRef, rhsDepositToAccountRef, (this.depositToAccountRef!= null), (that.depositToAccountRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsSalesTaxCodeRef;
            lhsSalesTaxCodeRef = this.getSalesTaxCodeRef();
            ReferenceType rhsSalesTaxCodeRef;
            rhsSalesTaxCodeRef = that.getSalesTaxCodeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTaxCodeRef", lhsSalesTaxCodeRef), LocatorUtils.property(thatLocator, "salesTaxCodeRef", rhsSalesTaxCodeRef), lhsSalesTaxCodeRef, rhsSalesTaxCodeRef, (this.salesTaxCodeRef!= null), (that.salesTaxCodeRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsPurchaseTaxCodeRef;
            lhsPurchaseTaxCodeRef = this.getPurchaseTaxCodeRef();
            ReferenceType rhsPurchaseTaxCodeRef;
            rhsPurchaseTaxCodeRef = that.getPurchaseTaxCodeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseTaxCodeRef", lhsPurchaseTaxCodeRef), LocatorUtils.property(thatLocator, "purchaseTaxCodeRef", rhsPurchaseTaxCodeRef), lhsPurchaseTaxCodeRef, rhsPurchaseTaxCodeRef, (this.purchaseTaxCodeRef!= null), (that.purchaseTaxCodeRef!= null))) {
                return false;
            }
        }
        {
            Date lhsInvStartDate;
            lhsInvStartDate = this.getInvStartDate();
            Date rhsInvStartDate;
            rhsInvStartDate = that.getInvStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "invStartDate", lhsInvStartDate), LocatorUtils.property(thatLocator, "invStartDate", rhsInvStartDate), lhsInvStartDate, rhsInvStartDate, (this.invStartDate!= null), (that.invStartDate!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsBuildPoint;
            lhsBuildPoint = this.getBuildPoint();
            BigDecimal rhsBuildPoint;
            rhsBuildPoint = that.getBuildPoint();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "buildPoint", lhsBuildPoint), LocatorUtils.property(thatLocator, "buildPoint", rhsBuildPoint), lhsBuildPoint, rhsBuildPoint, (this.buildPoint!= null), (that.buildPoint!= null))) {
                return false;
            }
        }
        {
            Boolean lhsPrintGroupedItems;
            lhsPrintGroupedItems = this.isPrintGroupedItems();
            Boolean rhsPrintGroupedItems;
            rhsPrintGroupedItems = that.isPrintGroupedItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "printGroupedItems", lhsPrintGroupedItems), LocatorUtils.property(thatLocator, "printGroupedItems", rhsPrintGroupedItems), lhsPrintGroupedItems, rhsPrintGroupedItems, (this.printGroupedItems!= null), (that.printGroupedItems!= null))) {
                return false;
            }
        }
        {
            Boolean lhsSpecialItem;
            lhsSpecialItem = this.isSpecialItem();
            Boolean rhsSpecialItem;
            rhsSpecialItem = that.isSpecialItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specialItem", lhsSpecialItem), LocatorUtils.property(thatLocator, "specialItem", rhsSpecialItem), lhsSpecialItem, rhsSpecialItem, (this.specialItem!= null), (that.specialItem!= null))) {
                return false;
            }
        }
        {
            SpecialItemTypeEnum lhsSpecialItemType;
            lhsSpecialItemType = this.getSpecialItemType();
            SpecialItemTypeEnum rhsSpecialItemType;
            rhsSpecialItemType = that.getSpecialItemType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specialItemType", lhsSpecialItemType), LocatorUtils.property(thatLocator, "specialItemType", rhsSpecialItemType), lhsSpecialItemType, rhsSpecialItemType, (this.specialItemType!= null), (that.specialItemType!= null))) {
                return false;
            }
        }
        {
            ItemGroupDetail lhsItemGroupDetail;
            lhsItemGroupDetail = this.getItemGroupDetail();
            ItemGroupDetail rhsItemGroupDetail;
            rhsItemGroupDetail = that.getItemGroupDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemGroupDetail", lhsItemGroupDetail), LocatorUtils.property(thatLocator, "itemGroupDetail", rhsItemGroupDetail), lhsItemGroupDetail, rhsItemGroupDetail, (this.itemGroupDetail!= null), (that.itemGroupDetail!= null))) {
                return false;
            }
        }
        {
            ItemAssemblyDetail lhsItemAssemblyDetail;
            lhsItemAssemblyDetail = this.getItemAssemblyDetail();
            ItemAssemblyDetail rhsItemAssemblyDetail;
            rhsItemAssemblyDetail = that.getItemAssemblyDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemAssemblyDetail", lhsItemAssemblyDetail), LocatorUtils.property(thatLocator, "itemAssemblyDetail", rhsItemAssemblyDetail), lhsItemAssemblyDetail, rhsItemAssemblyDetail, (this.itemAssemblyDetail!= null), (that.itemAssemblyDetail!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsAbatementRate;
            lhsAbatementRate = this.getAbatementRate();
            BigDecimal rhsAbatementRate;
            rhsAbatementRate = that.getAbatementRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "abatementRate", lhsAbatementRate), LocatorUtils.property(thatLocator, "abatementRate", rhsAbatementRate), lhsAbatementRate, rhsAbatementRate, (this.abatementRate!= null), (that.abatementRate!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsReverseChargeRate;
            lhsReverseChargeRate = this.getReverseChargeRate();
            BigDecimal rhsReverseChargeRate;
            rhsReverseChargeRate = that.getReverseChargeRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reverseChargeRate", lhsReverseChargeRate), LocatorUtils.property(thatLocator, "reverseChargeRate", rhsReverseChargeRate), lhsReverseChargeRate, rhsReverseChargeRate, (this.reverseChargeRate!= null), (that.reverseChargeRate!= null))) {
                return false;
            }
        }
        {
            String lhsServiceType;
            lhsServiceType = this.getServiceType();
            String rhsServiceType;
            rhsServiceType = that.getServiceType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "serviceType", lhsServiceType), LocatorUtils.property(thatLocator, "serviceType", rhsServiceType), lhsServiceType, rhsServiceType, (this.serviceType!= null), (that.serviceType!= null))) {
                return false;
            }
        }
        {
            String lhsItemCategoryType;
            lhsItemCategoryType = this.getItemCategoryType();
            String rhsItemCategoryType;
            rhsItemCategoryType = that.getItemCategoryType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCategoryType", lhsItemCategoryType), LocatorUtils.property(thatLocator, "itemCategoryType", rhsItemCategoryType), lhsItemCategoryType, rhsItemCategoryType, (this.itemCategoryType!= null), (that.itemCategoryType!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsItemEx;
            lhsItemEx = this.getItemEx();
            IntuitAnyType rhsItemEx;
            rhsItemEx = that.getItemEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemEx", lhsItemEx), LocatorUtils.property(thatLocator, "itemEx", rhsItemEx), lhsItemEx, rhsItemEx, (this.itemEx!= null), (that.itemEx!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsTaxClassificationRef;
            lhsTaxClassificationRef = this.getTaxClassificationRef();
            ReferenceType rhsTaxClassificationRef;
            rhsTaxClassificationRef = that.getTaxClassificationRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxClassificationRef", lhsTaxClassificationRef), LocatorUtils.property(thatLocator, "taxClassificationRef", rhsTaxClassificationRef), lhsTaxClassificationRef, rhsTaxClassificationRef, (this.taxClassificationRef!= null), (that.taxClassificationRef!= null))) {
                return false;
            }
        }
        {
            String lhsUQCDisplayText;
            lhsUQCDisplayText = this.getUQCDisplayText();
            String rhsUQCDisplayText;
            rhsUQCDisplayText = that.getUQCDisplayText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uqcDisplayText", lhsUQCDisplayText), LocatorUtils.property(thatLocator, "uqcDisplayText", rhsUQCDisplayText), lhsUQCDisplayText, rhsUQCDisplayText, (this.uqcDisplayText!= null), (that.uqcDisplayText!= null))) {
                return false;
            }
        }
        {
            String lhsUQCId;
            lhsUQCId = this.getUQCId();
            String rhsUQCId;
            rhsUQCId = that.getUQCId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uqcId", lhsUQCId), LocatorUtils.property(thatLocator, "uqcId", rhsUQCId), lhsUQCId, rhsUQCId, (this.uqcId!= null), (that.uqcId!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsClassRef;
            lhsClassRef = this.getClassRef();
            ReferenceType rhsClassRef;
            rhsClassRef = that.getClassRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classRef", lhsClassRef), LocatorUtils.property(thatLocator, "classRef", rhsClassRef), lhsClassRef, rhsClassRef, (this.classRef!= null), (that.classRef!= null))) {
                return false;
            }
        }
        {
            String lhsSource;
            lhsSource = this.getSource();
            String rhsSource;
            rhsSource = that.getSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "source", lhsSource), LocatorUtils.property(thatLocator, "source", rhsSource), lhsSource, rhsSource, (this.source!= null), (that.source!= null))) {
                return false;
            }
        }
        {
            Boolean lhsDeferredRevenue;
            lhsDeferredRevenue = this.isDeferredRevenue();
            Boolean rhsDeferredRevenue;
            rhsDeferredRevenue = that.isDeferredRevenue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deferredRevenue", lhsDeferredRevenue), LocatorUtils.property(thatLocator, "deferredRevenue", rhsDeferredRevenue), lhsDeferredRevenue, rhsDeferredRevenue, (this.deferredRevenue!= null), (that.deferredRevenue!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName, (this.name!= null));
        }
        {
            String theSku;
            theSku = this.getSku();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sku", theSku), currentHashCode, theSku, (this.sku!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription, (this.description!= null));
        }
        {
            Boolean theActive;
            theActive = this.isActive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "active", theActive), currentHashCode, theActive, (this.active!= null));
        }
        {
            Boolean theSubItem;
            theSubItem = this.isSubItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subItem", theSubItem), currentHashCode, theSubItem, (this.subItem!= null));
        }
        {
            ReferenceType theParentRef;
            theParentRef = this.getParentRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parentRef", theParentRef), currentHashCode, theParentRef, (this.parentRef!= null));
        }
        {
            Integer theLevel;
            theLevel = this.getLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "level", theLevel), currentHashCode, theLevel, (this.level!= null));
        }
        {
            String theFullyQualifiedName;
            theFullyQualifiedName = this.getFullyQualifiedName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fullyQualifiedName", theFullyQualifiedName), currentHashCode, theFullyQualifiedName, (this.fullyQualifiedName!= null));
        }
        {
            Boolean theTaxable;
            theTaxable = this.isTaxable();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxable", theTaxable), currentHashCode, theTaxable, (this.taxable!= null));
        }
        {
            Boolean theSalesTaxIncluded;
            theSalesTaxIncluded = this.isSalesTaxIncluded();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTaxIncluded", theSalesTaxIncluded), currentHashCode, theSalesTaxIncluded, (this.salesTaxIncluded!= null));
        }
        {
            Boolean thePercentBased;
            thePercentBased = this.isPercentBased();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentBased", thePercentBased), currentHashCode, thePercentBased, (this.percentBased!= null));
        }
        {
            BigDecimal theUnitPrice;
            theUnitPrice = this.getUnitPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unitPrice", theUnitPrice), currentHashCode, theUnitPrice, (this.unitPrice!= null));
        }
        {
            BigDecimal theRatePercent;
            theRatePercent = this.getRatePercent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ratePercent", theRatePercent), currentHashCode, theRatePercent, (this.ratePercent!= null));
        }
        {
            ItemTypeEnum theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType, (this.type!= null));
        }
        {
            ReferenceType thePaymentMethodRef;
            thePaymentMethodRef = this.getPaymentMethodRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentMethodRef", thePaymentMethodRef), currentHashCode, thePaymentMethodRef, (this.paymentMethodRef!= null));
        }
        {
            ReferenceType theUOMSetRef;
            theUOMSetRef = this.getUOMSetRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uomSetRef", theUOMSetRef), currentHashCode, theUOMSetRef, (this.uomSetRef!= null));
        }
        {
            ReferenceType theIncomeAccountRef;
            theIncomeAccountRef = this.getIncomeAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "incomeAccountRef", theIncomeAccountRef), currentHashCode, theIncomeAccountRef, (this.incomeAccountRef!= null));
        }
        {
            String thePurchaseDesc;
            thePurchaseDesc = this.getPurchaseDesc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseDesc", thePurchaseDesc), currentHashCode, thePurchaseDesc, (this.purchaseDesc!= null));
        }
        {
            Boolean thePurchaseTaxIncluded;
            thePurchaseTaxIncluded = this.isPurchaseTaxIncluded();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseTaxIncluded", thePurchaseTaxIncluded), currentHashCode, thePurchaseTaxIncluded, (this.purchaseTaxIncluded!= null));
        }
        {
            BigDecimal thePurchaseCost;
            thePurchaseCost = this.getPurchaseCost();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseCost", thePurchaseCost), currentHashCode, thePurchaseCost, (this.purchaseCost!= null));
        }
        {
            ReferenceType theExpenseAccountRef;
            theExpenseAccountRef = this.getExpenseAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expenseAccountRef", theExpenseAccountRef), currentHashCode, theExpenseAccountRef, (this.expenseAccountRef!= null));
        }
        {
            ReferenceType theCOGSAccountRef;
            theCOGSAccountRef = this.getCOGSAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cogsAccountRef", theCOGSAccountRef), currentHashCode, theCOGSAccountRef, (this.cogsAccountRef!= null));
        }
        {
            ReferenceType theAssetAccountRef;
            theAssetAccountRef = this.getAssetAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assetAccountRef", theAssetAccountRef), currentHashCode, theAssetAccountRef, (this.assetAccountRef!= null));
        }
        {
            ReferenceType thePrefVendorRef;
            thePrefVendorRef = this.getPrefVendorRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prefVendorRef", thePrefVendorRef), currentHashCode, thePrefVendorRef, (this.prefVendorRef!= null));
        }
        {
            BigDecimal theAvgCost;
            theAvgCost = this.getAvgCost();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "avgCost", theAvgCost), currentHashCode, theAvgCost, (this.avgCost!= null));
        }
        {
            Boolean theTrackQtyOnHand;
            theTrackQtyOnHand = this.isTrackQtyOnHand();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trackQtyOnHand", theTrackQtyOnHand), currentHashCode, theTrackQtyOnHand, (this.trackQtyOnHand!= null));
        }
        {
            BigDecimal theQtyOnHand;
            theQtyOnHand = this.getQtyOnHand();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qtyOnHand", theQtyOnHand), currentHashCode, theQtyOnHand, (this.qtyOnHand!= null));
        }
        {
            BigDecimal theQtyOnPurchaseOrder;
            theQtyOnPurchaseOrder = this.getQtyOnPurchaseOrder();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qtyOnPurchaseOrder", theQtyOnPurchaseOrder), currentHashCode, theQtyOnPurchaseOrder, (this.qtyOnPurchaseOrder!= null));
        }
        {
            BigDecimal theQtyOnSalesOrder;
            theQtyOnSalesOrder = this.getQtyOnSalesOrder();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qtyOnSalesOrder", theQtyOnSalesOrder), currentHashCode, theQtyOnSalesOrder, (this.qtyOnSalesOrder!= null));
        }
        {
            BigDecimal theReorderPoint;
            theReorderPoint = this.getReorderPoint();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reorderPoint", theReorderPoint), currentHashCode, theReorderPoint, (this.reorderPoint!= null));
        }
        {
            String theManPartNum;
            theManPartNum = this.getManPartNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "manPartNum", theManPartNum), currentHashCode, theManPartNum, (this.manPartNum!= null));
        }
        {
            ReferenceType theDepositToAccountRef;
            theDepositToAccountRef = this.getDepositToAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "depositToAccountRef", theDepositToAccountRef), currentHashCode, theDepositToAccountRef, (this.depositToAccountRef!= null));
        }
        {
            ReferenceType theSalesTaxCodeRef;
            theSalesTaxCodeRef = this.getSalesTaxCodeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTaxCodeRef", theSalesTaxCodeRef), currentHashCode, theSalesTaxCodeRef, (this.salesTaxCodeRef!= null));
        }
        {
            ReferenceType thePurchaseTaxCodeRef;
            thePurchaseTaxCodeRef = this.getPurchaseTaxCodeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseTaxCodeRef", thePurchaseTaxCodeRef), currentHashCode, thePurchaseTaxCodeRef, (this.purchaseTaxCodeRef!= null));
        }
        {
            Date theInvStartDate;
            theInvStartDate = this.getInvStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "invStartDate", theInvStartDate), currentHashCode, theInvStartDate, (this.invStartDate!= null));
        }
        {
            BigDecimal theBuildPoint;
            theBuildPoint = this.getBuildPoint();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "buildPoint", theBuildPoint), currentHashCode, theBuildPoint, (this.buildPoint!= null));
        }
        {
            Boolean thePrintGroupedItems;
            thePrintGroupedItems = this.isPrintGroupedItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "printGroupedItems", thePrintGroupedItems), currentHashCode, thePrintGroupedItems, (this.printGroupedItems!= null));
        }
        {
            Boolean theSpecialItem;
            theSpecialItem = this.isSpecialItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specialItem", theSpecialItem), currentHashCode, theSpecialItem, (this.specialItem!= null));
        }
        {
            SpecialItemTypeEnum theSpecialItemType;
            theSpecialItemType = this.getSpecialItemType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specialItemType", theSpecialItemType), currentHashCode, theSpecialItemType, (this.specialItemType!= null));
        }
        {
            ItemGroupDetail theItemGroupDetail;
            theItemGroupDetail = this.getItemGroupDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemGroupDetail", theItemGroupDetail), currentHashCode, theItemGroupDetail, (this.itemGroupDetail!= null));
        }
        {
            ItemAssemblyDetail theItemAssemblyDetail;
            theItemAssemblyDetail = this.getItemAssemblyDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemAssemblyDetail", theItemAssemblyDetail), currentHashCode, theItemAssemblyDetail, (this.itemAssemblyDetail!= null));
        }
        {
            BigDecimal theAbatementRate;
            theAbatementRate = this.getAbatementRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "abatementRate", theAbatementRate), currentHashCode, theAbatementRate, (this.abatementRate!= null));
        }
        {
            BigDecimal theReverseChargeRate;
            theReverseChargeRate = this.getReverseChargeRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reverseChargeRate", theReverseChargeRate), currentHashCode, theReverseChargeRate, (this.reverseChargeRate!= null));
        }
        {
            String theServiceType;
            theServiceType = this.getServiceType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "serviceType", theServiceType), currentHashCode, theServiceType, (this.serviceType!= null));
        }
        {
            String theItemCategoryType;
            theItemCategoryType = this.getItemCategoryType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCategoryType", theItemCategoryType), currentHashCode, theItemCategoryType, (this.itemCategoryType!= null));
        }
        {
            IntuitAnyType theItemEx;
            theItemEx = this.getItemEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemEx", theItemEx), currentHashCode, theItemEx, (this.itemEx!= null));
        }
        {
            ReferenceType theTaxClassificationRef;
            theTaxClassificationRef = this.getTaxClassificationRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxClassificationRef", theTaxClassificationRef), currentHashCode, theTaxClassificationRef, (this.taxClassificationRef!= null));
        }
        {
            String theUQCDisplayText;
            theUQCDisplayText = this.getUQCDisplayText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uqcDisplayText", theUQCDisplayText), currentHashCode, theUQCDisplayText, (this.uqcDisplayText!= null));
        }
        {
            String theUQCId;
            theUQCId = this.getUQCId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uqcId", theUQCId), currentHashCode, theUQCId, (this.uqcId!= null));
        }
        {
            ReferenceType theClassRef;
            theClassRef = this.getClassRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classRef", theClassRef), currentHashCode, theClassRef, (this.classRef!= null));
        }
        {
            String theSource;
            theSource = this.getSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "source", theSource), currentHashCode, theSource, (this.source!= null));
        }
        {
            Boolean theDeferredRevenue;
            theDeferredRevenue = this.isDeferredRevenue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deferredRevenue", theDeferredRevenue), currentHashCode, theDeferredRevenue, (this.deferredRevenue!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
