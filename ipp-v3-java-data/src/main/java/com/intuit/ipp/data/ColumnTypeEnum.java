//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.06.18 at 04:20:25 PM IST 
//


package com.intuit.ipp.data;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ColumnTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="ColumnTypeEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Account"/&gt;
 *     &lt;enumeration value="Money"/&gt;
 *     &lt;enumeration value="Rate"/&gt;
 *     &lt;enumeration value="Customer"/&gt;
 *     &lt;enumeration value="Vendor"/&gt;
 *     &lt;enumeration value="Employee"/&gt;
 *     &lt;enumeration value="ProductsAndService"/&gt;
 *     &lt;enumeration value="Department"/&gt;
 *     &lt;enumeration value="Class"/&gt;
 *     &lt;enumeration value="String"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ColumnTypeEnum")
@XmlEnum
public enum ColumnTypeEnum {

    @XmlEnumValue("Account")
    ACCOUNT("Account"),
    @XmlEnumValue("Money")
    MONEY("Money"),
    @XmlEnumValue("Rate")
    RATE("Rate"),
    @XmlEnumValue("Customer")
    CUSTOMER("Customer"),
    @XmlEnumValue("Vendor")
    VENDOR("Vendor"),
    @XmlEnumValue("Employee")
    EMPLOYEE("Employee"),
    @XmlEnumValue("ProductsAndService")
    PRODUCTS_AND_SERVICE("ProductsAndService"),
    @XmlEnumValue("Department")
    DEPARTMENT("Department"),
    @XmlEnumValue("Class")
    CLASS("Class"),
    @XmlEnumValue("String")
    STRING("String");
    private final String value;

    ColumnTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ColumnTypeEnum fromValue(String v) {
        for (ColumnTypeEnum c: ColumnTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
