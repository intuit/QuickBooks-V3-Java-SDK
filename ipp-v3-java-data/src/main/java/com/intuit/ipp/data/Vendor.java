//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 *  Describes the Party as a Vendor Role view 
 * 
 * <p>Java class for Vendor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Vendor"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}NameBase"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ContactName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="AltContactName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Notes" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="BillAddr" type="{http://schema.intuit.com/finance/v3}PhysicalAddress" minOccurs="0"/&gt;
 *         &lt;element name="ShipAddr" type="{http://schema.intuit.com/finance/v3}PhysicalAddress" minOccurs="0"/&gt;
 *         &lt;element name="OtherAddr" type="{http://schema.intuit.com/finance/v3}PhysicalAddress" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="TaxCountry" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="TaxIdentifier" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="TaxIdEffectiveDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="BusinessNumber" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ParentRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="VendorTypeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="TermRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="PrefillAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Balance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="BillRate" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="OpenBalanceDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="CreditLimit" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="AcctNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Vendor1099" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="T4AEligible" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="T5018Eligible" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="CurrencyRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="TDSEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="TDSEntityTypeId" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="TDSSectionTypeId" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="TDSOverrideThreshold" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="TaxReportingBasis" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="APAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="VendorEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *         &lt;element name="GSTIN" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="GSTRegistrationType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="IsSubContractor" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SubcontractorType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="CISRate" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="HasTPAR" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="VendorPaymentBankDetail" type="{http://schema.intuit.com/finance/v3}VendorBankAccountDetail" minOccurs="0"/&gt;
 *         &lt;element name="Source" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="CostRate" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Vendor", propOrder = {
    "contactName",
    "altContactName",
    "notes",
    "billAddr",
    "shipAddr",
    "otherAddr",
    "taxCountry",
    "taxIdentifier",
    "taxIdEffectiveDate",
    "businessNumber",
    "parentRef",
    "vendorTypeRef",
    "termRef",
    "prefillAccountRef",
    "balance",
    "billRate",
    "openBalanceDate",
    "creditLimit",
    "acctNum",
    "vendor1099",
    "t4AEligible",
    "t5018Eligible",
    "currencyRef",
    "tdsEnabled",
    "tdsEntityTypeId",
    "tdsSectionTypeId",
    "tdsOverrideThreshold",
    "taxReportingBasis",
    "apAccountRef",
    "vendorEx",
    "gstin",
    "gstRegistrationType",
    "isSubContractor",
    "subcontractorType",
    "cisRate",
    "hasTPAR",
    "vendorPaymentBankDetail",
    "source",
    "costRate"
})
@XmlSeeAlso({
    TaxAgency.class
})
public class Vendor
    extends NameBase
    implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ContactName")
    protected String contactName;
    @XmlElement(name = "AltContactName")
    protected String altContactName;
    @XmlElement(name = "Notes")
    protected String notes;
    @XmlElement(name = "BillAddr")
    protected PhysicalAddress billAddr;
    @XmlElement(name = "ShipAddr")
    protected PhysicalAddress shipAddr;
    @XmlElement(name = "OtherAddr")
    protected List<PhysicalAddress> otherAddr;
    @XmlElement(name = "TaxCountry")
    protected String taxCountry;
    @XmlElement(name = "TaxIdentifier")
    protected String taxIdentifier;
    @XmlElement(name = "TaxIdEffectiveDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date taxIdEffectiveDate;
    @XmlElement(name = "BusinessNumber")
    protected String businessNumber;
    @XmlElement(name = "ParentRef")
    protected ReferenceType parentRef;
    @XmlElement(name = "VendorTypeRef")
    protected ReferenceType vendorTypeRef;
    @XmlElement(name = "TermRef")
    protected ReferenceType termRef;
    @XmlElement(name = "PrefillAccountRef")
    protected ReferenceType prefillAccountRef;
    @XmlElement(name = "Balance")
    protected BigDecimal balance;
    @XmlElement(name = "BillRate")
    protected BigDecimal billRate;
    @XmlElement(name = "OpenBalanceDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date openBalanceDate;
    @XmlElement(name = "CreditLimit")
    protected BigDecimal creditLimit;
    @XmlElement(name = "AcctNum")
    protected String acctNum;
    @XmlElement(name = "Vendor1099")
    protected Boolean vendor1099;
    @XmlElement(name = "T4AEligible")
    protected Boolean t4AEligible;
    @XmlElement(name = "T5018Eligible")
    protected Boolean t5018Eligible;
    @XmlElement(name = "CurrencyRef")
    protected ReferenceType currencyRef;
    @XmlElement(name = "TDSEnabled")
    protected Boolean tdsEnabled;
    @XmlElement(name = "TDSEntityTypeId")
    protected Integer tdsEntityTypeId;
    @XmlElement(name = "TDSSectionTypeId")
    protected Integer tdsSectionTypeId;
    @XmlElement(name = "TDSOverrideThreshold")
    protected Boolean tdsOverrideThreshold;
    @XmlElement(name = "TaxReportingBasis")
    protected String taxReportingBasis;
    @XmlElement(name = "APAccountRef")
    protected ReferenceType apAccountRef;
    @XmlElement(name = "VendorEx")
    protected IntuitAnyType vendorEx;
    @XmlElement(name = "GSTIN")
    protected String gstin;
    @XmlElement(name = "GSTRegistrationType")
    protected String gstRegistrationType;
    @XmlElement(name = "IsSubContractor")
    protected Boolean isSubContractor;
    @XmlElement(name = "SubcontractorType")
    protected String subcontractorType;
    @XmlElement(name = "CISRate")
    protected String cisRate;
    @XmlElement(name = "HasTPAR")
    protected Boolean hasTPAR;
    @XmlElement(name = "VendorPaymentBankDetail")
    protected VendorBankAccountDetail vendorPaymentBankDetail;
    @XmlElement(name = "Source")
    protected String source;
    @XmlElement(name = "CostRate")
    protected BigDecimal costRate;

    /**
     * Gets the value of the contactName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContactName() {
        return contactName;
    }

    /**
     * Sets the value of the contactName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContactName(String value) {
        this.contactName = value;
    }

    /**
     * Gets the value of the altContactName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAltContactName() {
        return altContactName;
    }

    /**
     * Sets the value of the altContactName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAltContactName(String value) {
        this.altContactName = value;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotes(String value) {
        this.notes = value;
    }

    /**
     * Gets the value of the billAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getBillAddr() {
        return billAddr;
    }

    /**
     * Sets the value of the billAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setBillAddr(PhysicalAddress value) {
        this.billAddr = value;
    }

    /**
     * Gets the value of the shipAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getShipAddr() {
        return shipAddr;
    }

    /**
     * Sets the value of the shipAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setShipAddr(PhysicalAddress value) {
        this.shipAddr = value;
    }

    /**
     * Gets the value of the otherAddr property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherAddr property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherAddr().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalAddress }
     * 
     * 
     */
    public List<PhysicalAddress> getOtherAddr() {
        if (otherAddr == null) {
            otherAddr = new ArrayList<PhysicalAddress>();
        }
        return this.otherAddr;
    }

    /**
     * Gets the value of the taxCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxCountry() {
        return taxCountry;
    }

    /**
     * Sets the value of the taxCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxCountry(String value) {
        this.taxCountry = value;
    }

    /**
     * Gets the value of the taxIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxIdentifier() {
        return taxIdentifier;
    }

    /**
     * Sets the value of the taxIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxIdentifier(String value) {
        this.taxIdentifier = value;
    }

    /**
     * Gets the value of the taxIdEffectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getTaxIdEffectiveDate() {
        return taxIdEffectiveDate;
    }

    /**
     * Sets the value of the taxIdEffectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxIdEffectiveDate(Date value) {
        this.taxIdEffectiveDate = value;
    }

    /**
     * Gets the value of the businessNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBusinessNumber() {
        return businessNumber;
    }

    /**
     * Sets the value of the businessNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBusinessNumber(String value) {
        this.businessNumber = value;
    }

    /**
     * Gets the value of the parentRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getParentRef() {
        return parentRef;
    }

    /**
     * Sets the value of the parentRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setParentRef(ReferenceType value) {
        this.parentRef = value;
    }

    /**
     * Gets the value of the vendorTypeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getVendorTypeRef() {
        return vendorTypeRef;
    }

    /**
     * Sets the value of the vendorTypeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setVendorTypeRef(ReferenceType value) {
        this.vendorTypeRef = value;
    }

    /**
     * Gets the value of the termRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTermRef() {
        return termRef;
    }

    /**
     * Sets the value of the termRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTermRef(ReferenceType value) {
        this.termRef = value;
    }

    /**
     * Gets the value of the prefillAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getPrefillAccountRef() {
        return prefillAccountRef;
    }

    /**
     * Sets the value of the prefillAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setPrefillAccountRef(ReferenceType value) {
        this.prefillAccountRef = value;
    }

    /**
     * Gets the value of the balance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBalance() {
        return balance;
    }

    /**
     * Sets the value of the balance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBalance(BigDecimal value) {
        this.balance = value;
    }

    /**
     * Gets the value of the billRate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBillRate() {
        return billRate;
    }

    /**
     * Sets the value of the billRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBillRate(BigDecimal value) {
        this.billRate = value;
    }

    /**
     * Gets the value of the openBalanceDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getOpenBalanceDate() {
        return openBalanceDate;
    }

    /**
     * Sets the value of the openBalanceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOpenBalanceDate(Date value) {
        this.openBalanceDate = value;
    }

    /**
     * Gets the value of the creditLimit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCreditLimit() {
        return creditLimit;
    }

    /**
     * Sets the value of the creditLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCreditLimit(BigDecimal value) {
        this.creditLimit = value;
    }

    /**
     * Gets the value of the acctNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcctNum() {
        return acctNum;
    }

    /**
     * Sets the value of the acctNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcctNum(String value) {
        this.acctNum = value;
    }

    /**
     * Gets the value of the vendor1099 property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVendor1099() {
        return vendor1099;
    }

    /**
     * Sets the value of the vendor1099 property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVendor1099(Boolean value) {
        this.vendor1099 = value;
    }

    /**
     * Gets the value of the t4AEligible property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isT4AEligible() {
        return t4AEligible;
    }

    /**
     * Sets the value of the t4AEligible property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setT4AEligible(Boolean value) {
        this.t4AEligible = value;
    }

    /**
     * Gets the value of the t5018Eligible property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isT5018Eligible() {
        return t5018Eligible;
    }

    /**
     * Sets the value of the t5018Eligible property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setT5018Eligible(Boolean value) {
        this.t5018Eligible = value;
    }

    /**
     * Gets the value of the currencyRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getCurrencyRef() {
        return currencyRef;
    }

    /**
     * Sets the value of the currencyRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setCurrencyRef(ReferenceType value) {
        this.currencyRef = value;
    }

    /**
     * Gets the value of the tdsEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTDSEnabled() {
        return tdsEnabled;
    }

    /**
     * Sets the value of the tdsEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTDSEnabled(Boolean value) {
        this.tdsEnabled = value;
    }

    /**
     * Gets the value of the tdsEntityTypeId property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTDSEntityTypeId() {
        return tdsEntityTypeId;
    }

    /**
     * Sets the value of the tdsEntityTypeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTDSEntityTypeId(Integer value) {
        this.tdsEntityTypeId = value;
    }

    /**
     * Gets the value of the tdsSectionTypeId property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTDSSectionTypeId() {
        return tdsSectionTypeId;
    }

    /**
     * Sets the value of the tdsSectionTypeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTDSSectionTypeId(Integer value) {
        this.tdsSectionTypeId = value;
    }

    /**
     * Gets the value of the tdsOverrideThreshold property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTDSOverrideThreshold() {
        return tdsOverrideThreshold;
    }

    /**
     * Sets the value of the tdsOverrideThreshold property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTDSOverrideThreshold(Boolean value) {
        this.tdsOverrideThreshold = value;
    }

    /**
     * Gets the value of the taxReportingBasis property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxReportingBasis() {
        return taxReportingBasis;
    }

    /**
     * Sets the value of the taxReportingBasis property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxReportingBasis(String value) {
        this.taxReportingBasis = value;
    }

    /**
     * Gets the value of the apAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getAPAccountRef() {
        return apAccountRef;
    }

    /**
     * Sets the value of the apAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setAPAccountRef(ReferenceType value) {
        this.apAccountRef = value;
    }

    /**
     * Gets the value of the vendorEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getVendorEx() {
        return vendorEx;
    }

    /**
     * Sets the value of the vendorEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setVendorEx(IntuitAnyType value) {
        this.vendorEx = value;
    }

    /**
     * Gets the value of the gstin property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGSTIN() {
        return gstin;
    }

    /**
     * Sets the value of the gstin property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGSTIN(String value) {
        this.gstin = value;
    }

    /**
     * Gets the value of the gstRegistrationType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGSTRegistrationType() {
        return gstRegistrationType;
    }

    /**
     * Sets the value of the gstRegistrationType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGSTRegistrationType(String value) {
        this.gstRegistrationType = value;
    }

    /**
     * Gets the value of the isSubContractor property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsSubContractor() {
        return isSubContractor;
    }

    /**
     * Sets the value of the isSubContractor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsSubContractor(Boolean value) {
        this.isSubContractor = value;
    }

    /**
     * Gets the value of the subcontractorType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubcontractorType() {
        return subcontractorType;
    }

    /**
     * Sets the value of the subcontractorType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubcontractorType(String value) {
        this.subcontractorType = value;
    }

    /**
     * Gets the value of the cisRate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCISRate() {
        return cisRate;
    }

    /**
     * Sets the value of the cisRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCISRate(String value) {
        this.cisRate = value;
    }

    /**
     * Gets the value of the hasTPAR property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasTPAR() {
        return hasTPAR;
    }

    /**
     * Sets the value of the hasTPAR property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasTPAR(Boolean value) {
        this.hasTPAR = value;
    }

    /**
     * Gets the value of the vendorPaymentBankDetail property.
     * 
     * @return
     *     possible object is
     *     {@link VendorBankAccountDetail }
     *     
     */
    public VendorBankAccountDetail getVendorPaymentBankDetail() {
        return vendorPaymentBankDetail;
    }

    /**
     * Sets the value of the vendorPaymentBankDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorBankAccountDetail }
     *     
     */
    public void setVendorPaymentBankDetail(VendorBankAccountDetail value) {
        this.vendorPaymentBankDetail = value;
    }

    /**
     * Gets the value of the source property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSource() {
        return source;
    }

    /**
     * Sets the value of the source property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSource(String value) {
        this.source = value;
    }

    /**
     * Gets the value of the costRate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCostRate() {
        return costRate;
    }

    /**
     * Sets the value of the costRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCostRate(BigDecimal value) {
        this.costRate = value;
    }

    /**
     * Sets the value of the otherAddr property.
     * 
     * @param otherAddr
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setOtherAddr(List<PhysicalAddress> otherAddr) {
        this.otherAddr = otherAddr;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Vendor that = ((Vendor) object);
        {
            String lhsContactName;
            lhsContactName = this.getContactName();
            String rhsContactName;
            rhsContactName = that.getContactName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactName", lhsContactName), LocatorUtils.property(thatLocator, "contactName", rhsContactName), lhsContactName, rhsContactName, (this.contactName!= null), (that.contactName!= null))) {
                return false;
            }
        }
        {
            String lhsAltContactName;
            lhsAltContactName = this.getAltContactName();
            String rhsAltContactName;
            rhsAltContactName = that.getAltContactName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altContactName", lhsAltContactName), LocatorUtils.property(thatLocator, "altContactName", rhsAltContactName), lhsAltContactName, rhsAltContactName, (this.altContactName!= null), (that.altContactName!= null))) {
                return false;
            }
        }
        {
            String lhsNotes;
            lhsNotes = this.getNotes();
            String rhsNotes;
            rhsNotes = that.getNotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notes", lhsNotes), LocatorUtils.property(thatLocator, "notes", rhsNotes), lhsNotes, rhsNotes, (this.notes!= null), (that.notes!= null))) {
                return false;
            }
        }
        {
            PhysicalAddress lhsBillAddr;
            lhsBillAddr = this.getBillAddr();
            PhysicalAddress rhsBillAddr;
            rhsBillAddr = that.getBillAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "billAddr", lhsBillAddr), LocatorUtils.property(thatLocator, "billAddr", rhsBillAddr), lhsBillAddr, rhsBillAddr, (this.billAddr!= null), (that.billAddr!= null))) {
                return false;
            }
        }
        {
            PhysicalAddress lhsShipAddr;
            lhsShipAddr = this.getShipAddr();
            PhysicalAddress rhsShipAddr;
            rhsShipAddr = that.getShipAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipAddr", lhsShipAddr), LocatorUtils.property(thatLocator, "shipAddr", rhsShipAddr), lhsShipAddr, rhsShipAddr, (this.shipAddr!= null), (that.shipAddr!= null))) {
                return false;
            }
        }
        {
            List<PhysicalAddress> lhsOtherAddr;
            lhsOtherAddr = (((this.otherAddr!= null)&&(!this.otherAddr.isEmpty()))?this.getOtherAddr():null);
            List<PhysicalAddress> rhsOtherAddr;
            rhsOtherAddr = (((that.otherAddr!= null)&&(!that.otherAddr.isEmpty()))?that.getOtherAddr():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherAddr", lhsOtherAddr), LocatorUtils.property(thatLocator, "otherAddr", rhsOtherAddr), lhsOtherAddr, rhsOtherAddr, ((this.otherAddr!= null)&&(!this.otherAddr.isEmpty())), ((that.otherAddr!= null)&&(!that.otherAddr.isEmpty())))) {
                return false;
            }
        }
        {
            String lhsTaxCountry;
            lhsTaxCountry = this.getTaxCountry();
            String rhsTaxCountry;
            rhsTaxCountry = that.getTaxCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxCountry", lhsTaxCountry), LocatorUtils.property(thatLocator, "taxCountry", rhsTaxCountry), lhsTaxCountry, rhsTaxCountry, (this.taxCountry!= null), (that.taxCountry!= null))) {
                return false;
            }
        }
        {
            String lhsTaxIdentifier;
            lhsTaxIdentifier = this.getTaxIdentifier();
            String rhsTaxIdentifier;
            rhsTaxIdentifier = that.getTaxIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxIdentifier", lhsTaxIdentifier), LocatorUtils.property(thatLocator, "taxIdentifier", rhsTaxIdentifier), lhsTaxIdentifier, rhsTaxIdentifier, (this.taxIdentifier!= null), (that.taxIdentifier!= null))) {
                return false;
            }
        }
        {
            Date lhsTaxIdEffectiveDate;
            lhsTaxIdEffectiveDate = this.getTaxIdEffectiveDate();
            Date rhsTaxIdEffectiveDate;
            rhsTaxIdEffectiveDate = that.getTaxIdEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxIdEffectiveDate", lhsTaxIdEffectiveDate), LocatorUtils.property(thatLocator, "taxIdEffectiveDate", rhsTaxIdEffectiveDate), lhsTaxIdEffectiveDate, rhsTaxIdEffectiveDate, (this.taxIdEffectiveDate!= null), (that.taxIdEffectiveDate!= null))) {
                return false;
            }
        }
        {
            String lhsBusinessNumber;
            lhsBusinessNumber = this.getBusinessNumber();
            String rhsBusinessNumber;
            rhsBusinessNumber = that.getBusinessNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "businessNumber", lhsBusinessNumber), LocatorUtils.property(thatLocator, "businessNumber", rhsBusinessNumber), lhsBusinessNumber, rhsBusinessNumber, (this.businessNumber!= null), (that.businessNumber!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsParentRef;
            lhsParentRef = this.getParentRef();
            ReferenceType rhsParentRef;
            rhsParentRef = that.getParentRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parentRef", lhsParentRef), LocatorUtils.property(thatLocator, "parentRef", rhsParentRef), lhsParentRef, rhsParentRef, (this.parentRef!= null), (that.parentRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsVendorTypeRef;
            lhsVendorTypeRef = this.getVendorTypeRef();
            ReferenceType rhsVendorTypeRef;
            rhsVendorTypeRef = that.getVendorTypeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorTypeRef", lhsVendorTypeRef), LocatorUtils.property(thatLocator, "vendorTypeRef", rhsVendorTypeRef), lhsVendorTypeRef, rhsVendorTypeRef, (this.vendorTypeRef!= null), (that.vendorTypeRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsTermRef;
            lhsTermRef = this.getTermRef();
            ReferenceType rhsTermRef;
            rhsTermRef = that.getTermRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "termRef", lhsTermRef), LocatorUtils.property(thatLocator, "termRef", rhsTermRef), lhsTermRef, rhsTermRef, (this.termRef!= null), (that.termRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsPrefillAccountRef;
            lhsPrefillAccountRef = this.getPrefillAccountRef();
            ReferenceType rhsPrefillAccountRef;
            rhsPrefillAccountRef = that.getPrefillAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prefillAccountRef", lhsPrefillAccountRef), LocatorUtils.property(thatLocator, "prefillAccountRef", rhsPrefillAccountRef), lhsPrefillAccountRef, rhsPrefillAccountRef, (this.prefillAccountRef!= null), (that.prefillAccountRef!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsBalance;
            lhsBalance = this.getBalance();
            BigDecimal rhsBalance;
            rhsBalance = that.getBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "balance", lhsBalance), LocatorUtils.property(thatLocator, "balance", rhsBalance), lhsBalance, rhsBalance, (this.balance!= null), (that.balance!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsBillRate;
            lhsBillRate = this.getBillRate();
            BigDecimal rhsBillRate;
            rhsBillRate = that.getBillRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "billRate", lhsBillRate), LocatorUtils.property(thatLocator, "billRate", rhsBillRate), lhsBillRate, rhsBillRate, (this.billRate!= null), (that.billRate!= null))) {
                return false;
            }
        }
        {
            Date lhsOpenBalanceDate;
            lhsOpenBalanceDate = this.getOpenBalanceDate();
            Date rhsOpenBalanceDate;
            rhsOpenBalanceDate = that.getOpenBalanceDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openBalanceDate", lhsOpenBalanceDate), LocatorUtils.property(thatLocator, "openBalanceDate", rhsOpenBalanceDate), lhsOpenBalanceDate, rhsOpenBalanceDate, (this.openBalanceDate!= null), (that.openBalanceDate!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsCreditLimit;
            lhsCreditLimit = this.getCreditLimit();
            BigDecimal rhsCreditLimit;
            rhsCreditLimit = that.getCreditLimit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creditLimit", lhsCreditLimit), LocatorUtils.property(thatLocator, "creditLimit", rhsCreditLimit), lhsCreditLimit, rhsCreditLimit, (this.creditLimit!= null), (that.creditLimit!= null))) {
                return false;
            }
        }
        {
            String lhsAcctNum;
            lhsAcctNum = this.getAcctNum();
            String rhsAcctNum;
            rhsAcctNum = that.getAcctNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acctNum", lhsAcctNum), LocatorUtils.property(thatLocator, "acctNum", rhsAcctNum), lhsAcctNum, rhsAcctNum, (this.acctNum!= null), (that.acctNum!= null))) {
                return false;
            }
        }
        {
            Boolean lhsVendor1099;
            lhsVendor1099 = this.isVendor1099();
            Boolean rhsVendor1099;
            rhsVendor1099 = that.isVendor1099();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendor1099", lhsVendor1099), LocatorUtils.property(thatLocator, "vendor1099", rhsVendor1099), lhsVendor1099, rhsVendor1099, (this.vendor1099 != null), (that.vendor1099 != null))) {
                return false;
            }
        }
        {
            Boolean lhsT4AEligible;
            lhsT4AEligible = this.isT4AEligible();
            Boolean rhsT4AEligible;
            rhsT4AEligible = that.isT4AEligible();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "t4AEligible", lhsT4AEligible), LocatorUtils.property(thatLocator, "t4AEligible", rhsT4AEligible), lhsT4AEligible, rhsT4AEligible, (this.t4AEligible!= null), (that.t4AEligible!= null))) {
                return false;
            }
        }
        {
            Boolean lhsT5018Eligible;
            lhsT5018Eligible = this.isT5018Eligible();
            Boolean rhsT5018Eligible;
            rhsT5018Eligible = that.isT5018Eligible();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "t5018Eligible", lhsT5018Eligible), LocatorUtils.property(thatLocator, "t5018Eligible", rhsT5018Eligible), lhsT5018Eligible, rhsT5018Eligible, (this.t5018Eligible!= null), (that.t5018Eligible!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsCurrencyRef;
            lhsCurrencyRef = this.getCurrencyRef();
            ReferenceType rhsCurrencyRef;
            rhsCurrencyRef = that.getCurrencyRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyRef", lhsCurrencyRef), LocatorUtils.property(thatLocator, "currencyRef", rhsCurrencyRef), lhsCurrencyRef, rhsCurrencyRef, (this.currencyRef!= null), (that.currencyRef!= null))) {
                return false;
            }
        }
        {
            Boolean lhsTDSEnabled;
            lhsTDSEnabled = this.isTDSEnabled();
            Boolean rhsTDSEnabled;
            rhsTDSEnabled = that.isTDSEnabled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tdsEnabled", lhsTDSEnabled), LocatorUtils.property(thatLocator, "tdsEnabled", rhsTDSEnabled), lhsTDSEnabled, rhsTDSEnabled, (this.tdsEnabled!= null), (that.tdsEnabled!= null))) {
                return false;
            }
        }
        {
            Integer lhsTDSEntityTypeId;
            lhsTDSEntityTypeId = this.getTDSEntityTypeId();
            Integer rhsTDSEntityTypeId;
            rhsTDSEntityTypeId = that.getTDSEntityTypeId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tdsEntityTypeId", lhsTDSEntityTypeId), LocatorUtils.property(thatLocator, "tdsEntityTypeId", rhsTDSEntityTypeId), lhsTDSEntityTypeId, rhsTDSEntityTypeId, (this.tdsEntityTypeId!= null), (that.tdsEntityTypeId!= null))) {
                return false;
            }
        }
        {
            Integer lhsTDSSectionTypeId;
            lhsTDSSectionTypeId = this.getTDSSectionTypeId();
            Integer rhsTDSSectionTypeId;
            rhsTDSSectionTypeId = that.getTDSSectionTypeId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tdsSectionTypeId", lhsTDSSectionTypeId), LocatorUtils.property(thatLocator, "tdsSectionTypeId", rhsTDSSectionTypeId), lhsTDSSectionTypeId, rhsTDSSectionTypeId, (this.tdsSectionTypeId!= null), (that.tdsSectionTypeId!= null))) {
                return false;
            }
        }
        {
            Boolean lhsTDSOverrideThreshold;
            lhsTDSOverrideThreshold = this.isTDSOverrideThreshold();
            Boolean rhsTDSOverrideThreshold;
            rhsTDSOverrideThreshold = that.isTDSOverrideThreshold();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tdsOverrideThreshold", lhsTDSOverrideThreshold), LocatorUtils.property(thatLocator, "tdsOverrideThreshold", rhsTDSOverrideThreshold), lhsTDSOverrideThreshold, rhsTDSOverrideThreshold, (this.tdsOverrideThreshold!= null), (that.tdsOverrideThreshold!= null))) {
                return false;
            }
        }
        {
            String lhsTaxReportingBasis;
            lhsTaxReportingBasis = this.getTaxReportingBasis();
            String rhsTaxReportingBasis;
            rhsTaxReportingBasis = that.getTaxReportingBasis();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxReportingBasis", lhsTaxReportingBasis), LocatorUtils.property(thatLocator, "taxReportingBasis", rhsTaxReportingBasis), lhsTaxReportingBasis, rhsTaxReportingBasis, (this.taxReportingBasis!= null), (that.taxReportingBasis!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsAPAccountRef;
            lhsAPAccountRef = this.getAPAccountRef();
            ReferenceType rhsAPAccountRef;
            rhsAPAccountRef = that.getAPAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "apAccountRef", lhsAPAccountRef), LocatorUtils.property(thatLocator, "apAccountRef", rhsAPAccountRef), lhsAPAccountRef, rhsAPAccountRef, (this.apAccountRef!= null), (that.apAccountRef!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsVendorEx;
            lhsVendorEx = this.getVendorEx();
            IntuitAnyType rhsVendorEx;
            rhsVendorEx = that.getVendorEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorEx", lhsVendorEx), LocatorUtils.property(thatLocator, "vendorEx", rhsVendorEx), lhsVendorEx, rhsVendorEx, (this.vendorEx!= null), (that.vendorEx!= null))) {
                return false;
            }
        }
        {
            String lhsGSTIN;
            lhsGSTIN = this.getGSTIN();
            String rhsGSTIN;
            rhsGSTIN = that.getGSTIN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gstin", lhsGSTIN), LocatorUtils.property(thatLocator, "gstin", rhsGSTIN), lhsGSTIN, rhsGSTIN, (this.gstin!= null), (that.gstin!= null))) {
                return false;
            }
        }
        {
            String lhsGSTRegistrationType;
            lhsGSTRegistrationType = this.getGSTRegistrationType();
            String rhsGSTRegistrationType;
            rhsGSTRegistrationType = that.getGSTRegistrationType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gstRegistrationType", lhsGSTRegistrationType), LocatorUtils.property(thatLocator, "gstRegistrationType", rhsGSTRegistrationType), lhsGSTRegistrationType, rhsGSTRegistrationType, (this.gstRegistrationType!= null), (that.gstRegistrationType!= null))) {
                return false;
            }
        }
        {
            Boolean lhsIsSubContractor;
            lhsIsSubContractor = this.isIsSubContractor();
            Boolean rhsIsSubContractor;
            rhsIsSubContractor = that.isIsSubContractor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isSubContractor", lhsIsSubContractor), LocatorUtils.property(thatLocator, "isSubContractor", rhsIsSubContractor), lhsIsSubContractor, rhsIsSubContractor, (this.isSubContractor!= null), (that.isSubContractor!= null))) {
                return false;
            }
        }
        {
            String lhsSubcontractorType;
            lhsSubcontractorType = this.getSubcontractorType();
            String rhsSubcontractorType;
            rhsSubcontractorType = that.getSubcontractorType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subcontractorType", lhsSubcontractorType), LocatorUtils.property(thatLocator, "subcontractorType", rhsSubcontractorType), lhsSubcontractorType, rhsSubcontractorType, (this.subcontractorType!= null), (that.subcontractorType!= null))) {
                return false;
            }
        }
        {
            String lhsCISRate;
            lhsCISRate = this.getCISRate();
            String rhsCISRate;
            rhsCISRate = that.getCISRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cisRate", lhsCISRate), LocatorUtils.property(thatLocator, "cisRate", rhsCISRate), lhsCISRate, rhsCISRate, (this.cisRate!= null), (that.cisRate!= null))) {
                return false;
            }
        }
        {
            Boolean lhsHasTPAR;
            lhsHasTPAR = this.isHasTPAR();
            Boolean rhsHasTPAR;
            rhsHasTPAR = that.isHasTPAR();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hasTPAR", lhsHasTPAR), LocatorUtils.property(thatLocator, "hasTPAR", rhsHasTPAR), lhsHasTPAR, rhsHasTPAR, (this.hasTPAR!= null), (that.hasTPAR!= null))) {
                return false;
            }
        }
        {
            VendorBankAccountDetail lhsVendorPaymentBankDetail;
            lhsVendorPaymentBankDetail = this.getVendorPaymentBankDetail();
            VendorBankAccountDetail rhsVendorPaymentBankDetail;
            rhsVendorPaymentBankDetail = that.getVendorPaymentBankDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorPaymentBankDetail", lhsVendorPaymentBankDetail), LocatorUtils.property(thatLocator, "vendorPaymentBankDetail", rhsVendorPaymentBankDetail), lhsVendorPaymentBankDetail, rhsVendorPaymentBankDetail, (this.vendorPaymentBankDetail!= null), (that.vendorPaymentBankDetail!= null))) {
                return false;
            }
        }
        {
            String lhsSource;
            lhsSource = this.getSource();
            String rhsSource;
            rhsSource = that.getSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "source", lhsSource), LocatorUtils.property(thatLocator, "source", rhsSource), lhsSource, rhsSource, (this.source!= null), (that.source!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsCostRate;
            lhsCostRate = this.getCostRate();
            BigDecimal rhsCostRate;
            rhsCostRate = that.getCostRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "costRate", lhsCostRate), LocatorUtils.property(thatLocator, "costRate", rhsCostRate), lhsCostRate, rhsCostRate, (this.costRate!= null), (that.costRate!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theContactName;
            theContactName = this.getContactName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactName", theContactName), currentHashCode, theContactName, (this.contactName!= null));
        }
        {
            String theAltContactName;
            theAltContactName = this.getAltContactName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altContactName", theAltContactName), currentHashCode, theAltContactName, (this.altContactName!= null));
        }
        {
            String theNotes;
            theNotes = this.getNotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notes", theNotes), currentHashCode, theNotes, (this.notes!= null));
        }
        {
            PhysicalAddress theBillAddr;
            theBillAddr = this.getBillAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "billAddr", theBillAddr), currentHashCode, theBillAddr, (this.billAddr!= null));
        }
        {
            PhysicalAddress theShipAddr;
            theShipAddr = this.getShipAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipAddr", theShipAddr), currentHashCode, theShipAddr, (this.shipAddr!= null));
        }
        {
            List<PhysicalAddress> theOtherAddr;
            theOtherAddr = (((this.otherAddr!= null)&&(!this.otherAddr.isEmpty()))?this.getOtherAddr():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherAddr", theOtherAddr), currentHashCode, theOtherAddr, ((this.otherAddr!= null)&&(!this.otherAddr.isEmpty())));
        }
        {
            String theTaxCountry;
            theTaxCountry = this.getTaxCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxCountry", theTaxCountry), currentHashCode, theTaxCountry, (this.taxCountry!= null));
        }
        {
            String theTaxIdentifier;
            theTaxIdentifier = this.getTaxIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxIdentifier", theTaxIdentifier), currentHashCode, theTaxIdentifier, (this.taxIdentifier!= null));
        }
        {
            Date theTaxIdEffectiveDate;
            theTaxIdEffectiveDate = this.getTaxIdEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxIdEffectiveDate", theTaxIdEffectiveDate), currentHashCode, theTaxIdEffectiveDate, (this.taxIdEffectiveDate!= null));
        }
        {
            String theBusinessNumber;
            theBusinessNumber = this.getBusinessNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "businessNumber", theBusinessNumber), currentHashCode, theBusinessNumber, (this.businessNumber!= null));
        }
        {
            ReferenceType theParentRef;
            theParentRef = this.getParentRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parentRef", theParentRef), currentHashCode, theParentRef, (this.parentRef!= null));
        }
        {
            ReferenceType theVendorTypeRef;
            theVendorTypeRef = this.getVendorTypeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorTypeRef", theVendorTypeRef), currentHashCode, theVendorTypeRef, (this.vendorTypeRef!= null));
        }
        {
            ReferenceType theTermRef;
            theTermRef = this.getTermRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "termRef", theTermRef), currentHashCode, theTermRef, (this.termRef!= null));
        }
        {
            ReferenceType thePrefillAccountRef;
            thePrefillAccountRef = this.getPrefillAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prefillAccountRef", thePrefillAccountRef), currentHashCode, thePrefillAccountRef, (this.prefillAccountRef!= null));
        }
        {
            BigDecimal theBalance;
            theBalance = this.getBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "balance", theBalance), currentHashCode, theBalance, (this.balance!= null));
        }
        {
            BigDecimal theBillRate;
            theBillRate = this.getBillRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "billRate", theBillRate), currentHashCode, theBillRate, (this.billRate!= null));
        }
        {
            Date theOpenBalanceDate;
            theOpenBalanceDate = this.getOpenBalanceDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openBalanceDate", theOpenBalanceDate), currentHashCode, theOpenBalanceDate, (this.openBalanceDate!= null));
        }
        {
            BigDecimal theCreditLimit;
            theCreditLimit = this.getCreditLimit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creditLimit", theCreditLimit), currentHashCode, theCreditLimit, (this.creditLimit!= null));
        }
        {
            String theAcctNum;
            theAcctNum = this.getAcctNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acctNum", theAcctNum), currentHashCode, theAcctNum, (this.acctNum!= null));
        }
        {
            Boolean theVendor1099;
            theVendor1099 = this.isVendor1099();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendor1099", theVendor1099), currentHashCode, theVendor1099, (this.vendor1099 != null));
        }
        {
            Boolean theT4AEligible;
            theT4AEligible = this.isT4AEligible();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "t4AEligible", theT4AEligible), currentHashCode, theT4AEligible, (this.t4AEligible!= null));
        }
        {
            Boolean theT5018Eligible;
            theT5018Eligible = this.isT5018Eligible();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "t5018Eligible", theT5018Eligible), currentHashCode, theT5018Eligible, (this.t5018Eligible!= null));
        }
        {
            ReferenceType theCurrencyRef;
            theCurrencyRef = this.getCurrencyRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyRef", theCurrencyRef), currentHashCode, theCurrencyRef, (this.currencyRef!= null));
        }
        {
            Boolean theTDSEnabled;
            theTDSEnabled = this.isTDSEnabled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tdsEnabled", theTDSEnabled), currentHashCode, theTDSEnabled, (this.tdsEnabled!= null));
        }
        {
            Integer theTDSEntityTypeId;
            theTDSEntityTypeId = this.getTDSEntityTypeId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tdsEntityTypeId", theTDSEntityTypeId), currentHashCode, theTDSEntityTypeId, (this.tdsEntityTypeId!= null));
        }
        {
            Integer theTDSSectionTypeId;
            theTDSSectionTypeId = this.getTDSSectionTypeId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tdsSectionTypeId", theTDSSectionTypeId), currentHashCode, theTDSSectionTypeId, (this.tdsSectionTypeId!= null));
        }
        {
            Boolean theTDSOverrideThreshold;
            theTDSOverrideThreshold = this.isTDSOverrideThreshold();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tdsOverrideThreshold", theTDSOverrideThreshold), currentHashCode, theTDSOverrideThreshold, (this.tdsOverrideThreshold!= null));
        }
        {
            String theTaxReportingBasis;
            theTaxReportingBasis = this.getTaxReportingBasis();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxReportingBasis", theTaxReportingBasis), currentHashCode, theTaxReportingBasis, (this.taxReportingBasis!= null));
        }
        {
            ReferenceType theAPAccountRef;
            theAPAccountRef = this.getAPAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "apAccountRef", theAPAccountRef), currentHashCode, theAPAccountRef, (this.apAccountRef!= null));
        }
        {
            IntuitAnyType theVendorEx;
            theVendorEx = this.getVendorEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorEx", theVendorEx), currentHashCode, theVendorEx, (this.vendorEx!= null));
        }
        {
            String theGSTIN;
            theGSTIN = this.getGSTIN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gstin", theGSTIN), currentHashCode, theGSTIN, (this.gstin!= null));
        }
        {
            String theGSTRegistrationType;
            theGSTRegistrationType = this.getGSTRegistrationType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gstRegistrationType", theGSTRegistrationType), currentHashCode, theGSTRegistrationType, (this.gstRegistrationType!= null));
        }
        {
            Boolean theIsSubContractor;
            theIsSubContractor = this.isIsSubContractor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isSubContractor", theIsSubContractor), currentHashCode, theIsSubContractor, (this.isSubContractor!= null));
        }
        {
            String theSubcontractorType;
            theSubcontractorType = this.getSubcontractorType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subcontractorType", theSubcontractorType), currentHashCode, theSubcontractorType, (this.subcontractorType!= null));
        }
        {
            String theCISRate;
            theCISRate = this.getCISRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cisRate", theCISRate), currentHashCode, theCISRate, (this.cisRate!= null));
        }
        {
            Boolean theHasTPAR;
            theHasTPAR = this.isHasTPAR();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hasTPAR", theHasTPAR), currentHashCode, theHasTPAR, (this.hasTPAR!= null));
        }
        {
            VendorBankAccountDetail theVendorPaymentBankDetail;
            theVendorPaymentBankDetail = this.getVendorPaymentBankDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorPaymentBankDetail", theVendorPaymentBankDetail), currentHashCode, theVendorPaymentBankDetail, (this.vendorPaymentBankDetail!= null));
        }
        {
            String theSource;
            theSource = this.getSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "source", theSource), currentHashCode, theSource, (this.source!= null));
        }
        {
            BigDecimal theCostRate;
            theCostRate = this.getCostRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "costRate", theCostRate), currentHashCode, theCostRate, (this.costRate!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
