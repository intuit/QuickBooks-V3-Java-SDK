//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.util.Date;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * PurchaseOrder is a non-posting transaction
 * 				representing a request to purchase goods or services from a third
 * 				party.
 * 
 * <p>Java class for PurchaseOrder complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PurchaseOrder"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}PurchaseByVendor"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="TaxCodeRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="ClassRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="ReimbursableInfoRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="SalesTermRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="DueDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="ExpectedDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="VendorAddr" type="{http://schema.intuit.com/finance/v3}PhysicalAddress" minOccurs="0"/&gt;
 *         &lt;element name="ShipTo" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element name="DropShipToEntity" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *           &lt;element name="InventorySiteRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element name="ShipAddr" type="{http://schema.intuit.com/finance/v3}PhysicalAddress" minOccurs="0"/&gt;
 *         &lt;element name="ShipMethodRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="FOB" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="POEmail" type="{http://schema.intuit.com/finance/v3}EmailAddress" minOccurs="0"/&gt;
 *         &lt;element name="TemplateRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="PrintStatus" type="{http://schema.intuit.com/finance/v3}PrintStatusEnum" minOccurs="0"/&gt;
 *         &lt;element name="EmailStatus" type="{http://schema.intuit.com/finance/v3}EmailStatusEnum" minOccurs="0"/&gt;
 *         &lt;element name="ManuallyClosed" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="POStatus" type="{http://schema.intuit.com/finance/v3}PurchaseOrderStatusEnum" minOccurs="0"/&gt;
 *         &lt;element name="PurchaseOrderEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PurchaseOrder", propOrder = {
    "taxCodeRef",
    "classRef",
    "reimbursableInfoRef",
    "salesTermRef",
    "dueDate",
    "expectedDate",
    "vendorAddr",
    "shipTo",
    "dropShipToEntity",
    "inventorySiteRef",
    "shipAddr",
    "shipMethodRef",
    "fob",
    "poEmail",
    "templateRef",
    "printStatus",
    "emailStatus",
    "manuallyClosed",
    "poStatus",
    "purchaseOrderEx"
})
public class PurchaseOrder
    extends PurchaseByVendor
    implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "TaxCodeRef")
    protected ReferenceType taxCodeRef;
    @XmlElement(name = "ClassRef")
    protected ReferenceType classRef;
    @XmlElement(name = "ReimbursableInfoRef")
    protected ReferenceType reimbursableInfoRef;
    @XmlElement(name = "SalesTermRef")
    protected ReferenceType salesTermRef;
    @XmlElement(name = "DueDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date dueDate;
    @XmlElement(name = "ExpectedDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date expectedDate;
    @XmlElement(name = "VendorAddr")
    protected PhysicalAddress vendorAddr;
    @XmlElement(name = "ShipTo")
    protected ReferenceType shipTo;
    @XmlElement(name = "DropShipToEntity")
    protected ReferenceType dropShipToEntity;
    @XmlElement(name = "InventorySiteRef")
    protected ReferenceType inventorySiteRef;
    @XmlElement(name = "ShipAddr")
    protected PhysicalAddress shipAddr;
    @XmlElement(name = "ShipMethodRef")
    protected ReferenceType shipMethodRef;
    @XmlElement(name = "FOB")
    protected String fob;
    @XmlElement(name = "POEmail")
    protected EmailAddress poEmail;
    @XmlElement(name = "TemplateRef")
    protected ReferenceType templateRef;
    @XmlElement(name = "PrintStatus")
    @XmlSchemaType(name = "string")
    protected PrintStatusEnum printStatus;
    @XmlElement(name = "EmailStatus")
    @XmlSchemaType(name = "string")
    protected EmailStatusEnum emailStatus;
    @XmlElement(name = "ManuallyClosed")
    protected Boolean manuallyClosed;
    @XmlElement(name = "POStatus")
    @XmlSchemaType(name = "string")
    protected PurchaseOrderStatusEnum poStatus;
    @XmlElement(name = "PurchaseOrderEx")
    protected IntuitAnyType purchaseOrderEx;

    /**
     * Gets the value of the taxCodeRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTaxCodeRef() {
        return taxCodeRef;
    }

    /**
     * Sets the value of the taxCodeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTaxCodeRef(ReferenceType value) {
        this.taxCodeRef = value;
    }

    /**
     * Gets the value of the classRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getClassRef() {
        return classRef;
    }

    /**
     * Sets the value of the classRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setClassRef(ReferenceType value) {
        this.classRef = value;
    }

    /**
     * Gets the value of the reimbursableInfoRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getReimbursableInfoRef() {
        return reimbursableInfoRef;
    }

    /**
     * Sets the value of the reimbursableInfoRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setReimbursableInfoRef(ReferenceType value) {
        this.reimbursableInfoRef = value;
    }

    /**
     * Gets the value of the salesTermRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getSalesTermRef() {
        return salesTermRef;
    }

    /**
     * Sets the value of the salesTermRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setSalesTermRef(ReferenceType value) {
        this.salesTermRef = value;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDueDate(Date value) {
        this.dueDate = value;
    }

    /**
     * Gets the value of the expectedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getExpectedDate() {
        return expectedDate;
    }

    /**
     * Sets the value of the expectedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedDate(Date value) {
        this.expectedDate = value;
    }

    /**
     * Gets the value of the vendorAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getVendorAddr() {
        return vendorAddr;
    }

    /**
     * Sets the value of the vendorAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setVendorAddr(PhysicalAddress value) {
        this.vendorAddr = value;
    }

    /**
     * Gets the value of the shipTo property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getShipTo() {
        return shipTo;
    }

    /**
     * Sets the value of the shipTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setShipTo(ReferenceType value) {
        this.shipTo = value;
    }

    /**
     * Gets the value of the dropShipToEntity property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getDropShipToEntity() {
        return dropShipToEntity;
    }

    /**
     * Sets the value of the dropShipToEntity property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setDropShipToEntity(ReferenceType value) {
        this.dropShipToEntity = value;
    }

    /**
     * Gets the value of the inventorySiteRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getInventorySiteRef() {
        return inventorySiteRef;
    }

    /**
     * Sets the value of the inventorySiteRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setInventorySiteRef(ReferenceType value) {
        this.inventorySiteRef = value;
    }

    /**
     * Gets the value of the shipAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getShipAddr() {
        return shipAddr;
    }

    /**
     * Sets the value of the shipAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setShipAddr(PhysicalAddress value) {
        this.shipAddr = value;
    }

    /**
     * Gets the value of the shipMethodRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getShipMethodRef() {
        return shipMethodRef;
    }

    /**
     * Sets the value of the shipMethodRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setShipMethodRef(ReferenceType value) {
        this.shipMethodRef = value;
    }

    /**
     * Gets the value of the fob property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFOB() {
        return fob;
    }

    /**
     * Sets the value of the fob property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFOB(String value) {
        this.fob = value;
    }

    /**
     * Gets the value of the poEmail property.
     * 
     * @return
     *     possible object is
     *     {@link EmailAddress }
     *     
     */
    public EmailAddress getPOEmail() {
        return poEmail;
    }

    /**
     * Sets the value of the poEmail property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmailAddress }
     *     
     */
    public void setPOEmail(EmailAddress value) {
        this.poEmail = value;
    }

    /**
     * Gets the value of the templateRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getTemplateRef() {
        return templateRef;
    }

    /**
     * Sets the value of the templateRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setTemplateRef(ReferenceType value) {
        this.templateRef = value;
    }

    /**
     * Gets the value of the printStatus property.
     * 
     * @return
     *     possible object is
     *     {@link PrintStatusEnum }
     *     
     */
    public PrintStatusEnum getPrintStatus() {
        return printStatus;
    }

    /**
     * Sets the value of the printStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrintStatusEnum }
     *     
     */
    public void setPrintStatus(PrintStatusEnum value) {
        this.printStatus = value;
    }

    /**
     * Gets the value of the emailStatus property.
     * 
     * @return
     *     possible object is
     *     {@link EmailStatusEnum }
     *     
     */
    public EmailStatusEnum getEmailStatus() {
        return emailStatus;
    }

    /**
     * Sets the value of the emailStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmailStatusEnum }
     *     
     */
    public void setEmailStatus(EmailStatusEnum value) {
        this.emailStatus = value;
    }

    /**
     * Gets the value of the manuallyClosed property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isManuallyClosed() {
        return manuallyClosed;
    }

    /**
     * Sets the value of the manuallyClosed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setManuallyClosed(Boolean value) {
        this.manuallyClosed = value;
    }

    /**
     * Gets the value of the poStatus property.
     * 
     * @return
     *     possible object is
     *     {@link PurchaseOrderStatusEnum }
     *     
     */
    public PurchaseOrderStatusEnum getPOStatus() {
        return poStatus;
    }

    /**
     * Sets the value of the poStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link PurchaseOrderStatusEnum }
     *     
     */
    public void setPOStatus(PurchaseOrderStatusEnum value) {
        this.poStatus = value;
    }

    /**
     * Gets the value of the purchaseOrderEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getPurchaseOrderEx() {
        return purchaseOrderEx;
    }

    /**
     * Sets the value of the purchaseOrderEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setPurchaseOrderEx(IntuitAnyType value) {
        this.purchaseOrderEx = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final PurchaseOrder that = ((PurchaseOrder) object);
        {
            ReferenceType lhsTaxCodeRef;
            lhsTaxCodeRef = this.getTaxCodeRef();
            ReferenceType rhsTaxCodeRef;
            rhsTaxCodeRef = that.getTaxCodeRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxCodeRef", lhsTaxCodeRef), LocatorUtils.property(thatLocator, "taxCodeRef", rhsTaxCodeRef), lhsTaxCodeRef, rhsTaxCodeRef, (this.taxCodeRef!= null), (that.taxCodeRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsClassRef;
            lhsClassRef = this.getClassRef();
            ReferenceType rhsClassRef;
            rhsClassRef = that.getClassRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classRef", lhsClassRef), LocatorUtils.property(thatLocator, "classRef", rhsClassRef), lhsClassRef, rhsClassRef, (this.classRef!= null), (that.classRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsReimbursableInfoRef;
            lhsReimbursableInfoRef = this.getReimbursableInfoRef();
            ReferenceType rhsReimbursableInfoRef;
            rhsReimbursableInfoRef = that.getReimbursableInfoRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reimbursableInfoRef", lhsReimbursableInfoRef), LocatorUtils.property(thatLocator, "reimbursableInfoRef", rhsReimbursableInfoRef), lhsReimbursableInfoRef, rhsReimbursableInfoRef, (this.reimbursableInfoRef!= null), (that.reimbursableInfoRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsSalesTermRef;
            lhsSalesTermRef = this.getSalesTermRef();
            ReferenceType rhsSalesTermRef;
            rhsSalesTermRef = that.getSalesTermRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTermRef", lhsSalesTermRef), LocatorUtils.property(thatLocator, "salesTermRef", rhsSalesTermRef), lhsSalesTermRef, rhsSalesTermRef, (this.salesTermRef!= null), (that.salesTermRef!= null))) {
                return false;
            }
        }
        {
            Date lhsDueDate;
            lhsDueDate = this.getDueDate();
            Date rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate, (this.dueDate!= null), (that.dueDate!= null))) {
                return false;
            }
        }
        {
            Date lhsExpectedDate;
            lhsExpectedDate = this.getExpectedDate();
            Date rhsExpectedDate;
            rhsExpectedDate = that.getExpectedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expectedDate", lhsExpectedDate), LocatorUtils.property(thatLocator, "expectedDate", rhsExpectedDate), lhsExpectedDate, rhsExpectedDate, (this.expectedDate!= null), (that.expectedDate!= null))) {
                return false;
            }
        }
        {
            PhysicalAddress lhsVendorAddr;
            lhsVendorAddr = this.getVendorAddr();
            PhysicalAddress rhsVendorAddr;
            rhsVendorAddr = that.getVendorAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorAddr", lhsVendorAddr), LocatorUtils.property(thatLocator, "vendorAddr", rhsVendorAddr), lhsVendorAddr, rhsVendorAddr, (this.vendorAddr!= null), (that.vendorAddr!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsShipTo;
            lhsShipTo = this.getShipTo();
            ReferenceType rhsShipTo;
            rhsShipTo = that.getShipTo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipTo", lhsShipTo), LocatorUtils.property(thatLocator, "shipTo", rhsShipTo), lhsShipTo, rhsShipTo, (this.shipTo!= null), (that.shipTo!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsDropShipToEntity;
            lhsDropShipToEntity = this.getDropShipToEntity();
            ReferenceType rhsDropShipToEntity;
            rhsDropShipToEntity = that.getDropShipToEntity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dropShipToEntity", lhsDropShipToEntity), LocatorUtils.property(thatLocator, "dropShipToEntity", rhsDropShipToEntity), lhsDropShipToEntity, rhsDropShipToEntity, (this.dropShipToEntity!= null), (that.dropShipToEntity!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsInventorySiteRef;
            lhsInventorySiteRef = this.getInventorySiteRef();
            ReferenceType rhsInventorySiteRef;
            rhsInventorySiteRef = that.getInventorySiteRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inventorySiteRef", lhsInventorySiteRef), LocatorUtils.property(thatLocator, "inventorySiteRef", rhsInventorySiteRef), lhsInventorySiteRef, rhsInventorySiteRef, (this.inventorySiteRef!= null), (that.inventorySiteRef!= null))) {
                return false;
            }
        }
        {
            PhysicalAddress lhsShipAddr;
            lhsShipAddr = this.getShipAddr();
            PhysicalAddress rhsShipAddr;
            rhsShipAddr = that.getShipAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipAddr", lhsShipAddr), LocatorUtils.property(thatLocator, "shipAddr", rhsShipAddr), lhsShipAddr, rhsShipAddr, (this.shipAddr!= null), (that.shipAddr!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsShipMethodRef;
            lhsShipMethodRef = this.getShipMethodRef();
            ReferenceType rhsShipMethodRef;
            rhsShipMethodRef = that.getShipMethodRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipMethodRef", lhsShipMethodRef), LocatorUtils.property(thatLocator, "shipMethodRef", rhsShipMethodRef), lhsShipMethodRef, rhsShipMethodRef, (this.shipMethodRef!= null), (that.shipMethodRef!= null))) {
                return false;
            }
        }
        {
            String lhsFOB;
            lhsFOB = this.getFOB();
            String rhsFOB;
            rhsFOB = that.getFOB();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fob", lhsFOB), LocatorUtils.property(thatLocator, "fob", rhsFOB), lhsFOB, rhsFOB, (this.fob!= null), (that.fob!= null))) {
                return false;
            }
        }
        {
            EmailAddress lhsPOEmail;
            lhsPOEmail = this.getPOEmail();
            EmailAddress rhsPOEmail;
            rhsPOEmail = that.getPOEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "poEmail", lhsPOEmail), LocatorUtils.property(thatLocator, "poEmail", rhsPOEmail), lhsPOEmail, rhsPOEmail, (this.poEmail!= null), (that.poEmail!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsTemplateRef;
            lhsTemplateRef = this.getTemplateRef();
            ReferenceType rhsTemplateRef;
            rhsTemplateRef = that.getTemplateRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "templateRef", lhsTemplateRef), LocatorUtils.property(thatLocator, "templateRef", rhsTemplateRef), lhsTemplateRef, rhsTemplateRef, (this.templateRef!= null), (that.templateRef!= null))) {
                return false;
            }
        }
        {
            PrintStatusEnum lhsPrintStatus;
            lhsPrintStatus = this.getPrintStatus();
            PrintStatusEnum rhsPrintStatus;
            rhsPrintStatus = that.getPrintStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "printStatus", lhsPrintStatus), LocatorUtils.property(thatLocator, "printStatus", rhsPrintStatus), lhsPrintStatus, rhsPrintStatus, (this.printStatus!= null), (that.printStatus!= null))) {
                return false;
            }
        }
        {
            EmailStatusEnum lhsEmailStatus;
            lhsEmailStatus = this.getEmailStatus();
            EmailStatusEnum rhsEmailStatus;
            rhsEmailStatus = that.getEmailStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailStatus", lhsEmailStatus), LocatorUtils.property(thatLocator, "emailStatus", rhsEmailStatus), lhsEmailStatus, rhsEmailStatus, (this.emailStatus!= null), (that.emailStatus!= null))) {
                return false;
            }
        }
        {
            Boolean lhsManuallyClosed;
            lhsManuallyClosed = this.isManuallyClosed();
            Boolean rhsManuallyClosed;
            rhsManuallyClosed = that.isManuallyClosed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "manuallyClosed", lhsManuallyClosed), LocatorUtils.property(thatLocator, "manuallyClosed", rhsManuallyClosed), lhsManuallyClosed, rhsManuallyClosed, (this.manuallyClosed!= null), (that.manuallyClosed!= null))) {
                return false;
            }
        }
        {
            PurchaseOrderStatusEnum lhsPOStatus;
            lhsPOStatus = this.getPOStatus();
            PurchaseOrderStatusEnum rhsPOStatus;
            rhsPOStatus = that.getPOStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "poStatus", lhsPOStatus), LocatorUtils.property(thatLocator, "poStatus", rhsPOStatus), lhsPOStatus, rhsPOStatus, (this.poStatus!= null), (that.poStatus!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsPurchaseOrderEx;
            lhsPurchaseOrderEx = this.getPurchaseOrderEx();
            IntuitAnyType rhsPurchaseOrderEx;
            rhsPurchaseOrderEx = that.getPurchaseOrderEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseOrderEx", lhsPurchaseOrderEx), LocatorUtils.property(thatLocator, "purchaseOrderEx", rhsPurchaseOrderEx), lhsPurchaseOrderEx, rhsPurchaseOrderEx, (this.purchaseOrderEx!= null), (that.purchaseOrderEx!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ReferenceType theTaxCodeRef;
            theTaxCodeRef = this.getTaxCodeRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxCodeRef", theTaxCodeRef), currentHashCode, theTaxCodeRef, (this.taxCodeRef!= null));
        }
        {
            ReferenceType theClassRef;
            theClassRef = this.getClassRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classRef", theClassRef), currentHashCode, theClassRef, (this.classRef!= null));
        }
        {
            ReferenceType theReimbursableInfoRef;
            theReimbursableInfoRef = this.getReimbursableInfoRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reimbursableInfoRef", theReimbursableInfoRef), currentHashCode, theReimbursableInfoRef, (this.reimbursableInfoRef!= null));
        }
        {
            ReferenceType theSalesTermRef;
            theSalesTermRef = this.getSalesTermRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTermRef", theSalesTermRef), currentHashCode, theSalesTermRef, (this.salesTermRef!= null));
        }
        {
            Date theDueDate;
            theDueDate = this.getDueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate, (this.dueDate!= null));
        }
        {
            Date theExpectedDate;
            theExpectedDate = this.getExpectedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expectedDate", theExpectedDate), currentHashCode, theExpectedDate, (this.expectedDate!= null));
        }
        {
            PhysicalAddress theVendorAddr;
            theVendorAddr = this.getVendorAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorAddr", theVendorAddr), currentHashCode, theVendorAddr, (this.vendorAddr!= null));
        }
        {
            ReferenceType theShipTo;
            theShipTo = this.getShipTo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipTo", theShipTo), currentHashCode, theShipTo, (this.shipTo!= null));
        }
        {
            ReferenceType theDropShipToEntity;
            theDropShipToEntity = this.getDropShipToEntity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dropShipToEntity", theDropShipToEntity), currentHashCode, theDropShipToEntity, (this.dropShipToEntity!= null));
        }
        {
            ReferenceType theInventorySiteRef;
            theInventorySiteRef = this.getInventorySiteRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inventorySiteRef", theInventorySiteRef), currentHashCode, theInventorySiteRef, (this.inventorySiteRef!= null));
        }
        {
            PhysicalAddress theShipAddr;
            theShipAddr = this.getShipAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipAddr", theShipAddr), currentHashCode, theShipAddr, (this.shipAddr!= null));
        }
        {
            ReferenceType theShipMethodRef;
            theShipMethodRef = this.getShipMethodRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipMethodRef", theShipMethodRef), currentHashCode, theShipMethodRef, (this.shipMethodRef!= null));
        }
        {
            String theFOB;
            theFOB = this.getFOB();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fob", theFOB), currentHashCode, theFOB, (this.fob!= null));
        }
        {
            EmailAddress thePOEmail;
            thePOEmail = this.getPOEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "poEmail", thePOEmail), currentHashCode, thePOEmail, (this.poEmail!= null));
        }
        {
            ReferenceType theTemplateRef;
            theTemplateRef = this.getTemplateRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "templateRef", theTemplateRef), currentHashCode, theTemplateRef, (this.templateRef!= null));
        }
        {
            PrintStatusEnum thePrintStatus;
            thePrintStatus = this.getPrintStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "printStatus", thePrintStatus), currentHashCode, thePrintStatus, (this.printStatus!= null));
        }
        {
            EmailStatusEnum theEmailStatus;
            theEmailStatus = this.getEmailStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailStatus", theEmailStatus), currentHashCode, theEmailStatus, (this.emailStatus!= null));
        }
        {
            Boolean theManuallyClosed;
            theManuallyClosed = this.isManuallyClosed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "manuallyClosed", theManuallyClosed), currentHashCode, theManuallyClosed, (this.manuallyClosed!= null));
        }
        {
            PurchaseOrderStatusEnum thePOStatus;
            thePOStatus = this.getPOStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "poStatus", thePOStatus), currentHashCode, thePOStatus, (this.poStatus!= null));
        }
        {
            IntuitAnyType thePurchaseOrderEx;
            thePurchaseOrderEx = this.getPurchaseOrderEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseOrderEx", thePurchaseOrderEx), currentHashCode, thePurchaseOrderEx, (this.purchaseOrderEx!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
