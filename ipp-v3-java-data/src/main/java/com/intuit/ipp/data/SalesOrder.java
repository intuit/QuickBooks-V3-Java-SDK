//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.06.18 at 04:20:25 PM IST 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 * 				Product: QBW
 * 				Description: A sales order is a
 * 				financial transaction that represents a request received from a
 * 				customer to purchase products or services. Sales orders help you
 * 				manage the sale of products and services your customers order. For
 * 				example, a sales order tracks inventory that is on back order for a
 * 				customer. Sales Orders are supported only in QuickBooks Premier
 * 				(desktop) and above. However, if you are accessing a company file
 * 				created in Premier and above from a lesser edition of QuickBooks
 * 				(such as Pro), you can do queries against SalesOrders. Using sales
 * 				orders is optional.
 * 				Endpoint: services.intuit.com
 * 				Business Rules:
 * 				[li]A sales order must have at least one line that describes the
 * 				item. [/li][li]A sales order must have a reference to a customer in
 * 				the [/li][li]If you submit a query with the filter
 * 				IncludeDiscountLineDetails, the system retrieves either
 * 				DiscountAmount or DiscountRatePercent with associated values[/li]
 * 			
 * 
 * <p>Java class for SalesOrder complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SalesOrder"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}SalesTransaction"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ManuallyClosed" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="SalesOrderEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SalesOrder", propOrder = {
    "manuallyClosed",
    "salesOrderEx"
})
public class SalesOrder
    extends SalesTransaction
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ManuallyClosed")
    protected Boolean manuallyClosed;
    @XmlElement(name = "SalesOrderEx")
    protected IntuitAnyType salesOrderEx;

    /**
     * Gets the value of the manuallyClosed property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isManuallyClosed() {
        return manuallyClosed;
    }

    /**
     * Sets the value of the manuallyClosed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setManuallyClosed(Boolean value) {
        this.manuallyClosed = value;
    }

    /**
     * Gets the value of the salesOrderEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getSalesOrderEx() {
        return salesOrderEx;
    }

    /**
     * Sets the value of the salesOrderEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setSalesOrderEx(IntuitAnyType value) {
        this.salesOrderEx = value;
    }

}
