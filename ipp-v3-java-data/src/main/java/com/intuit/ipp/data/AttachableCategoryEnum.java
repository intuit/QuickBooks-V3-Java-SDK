//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.07 at 12:34:12 PM IST 
//


package com.intuit.ipp.data;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AttachableCategoryEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AttachableCategoryEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Image"/&gt;
 *     &lt;enumeration value="Signature"/&gt;
 *     &lt;enumeration value="Contact Photo"/&gt;
 *     &lt;enumeration value="Receipt"/&gt;
 *     &lt;enumeration value="Document"/&gt;
 *     &lt;enumeration value="Sound"/&gt;
 *     &lt;enumeration value="Other"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "AttachableCategoryEnum")
@XmlEnum
public enum AttachableCategoryEnum {

    @XmlEnumValue("Image")
    IMAGE("Image"),
    @XmlEnumValue("Signature")
    SIGNATURE("Signature"),
    @XmlEnumValue("Contact Photo")
    CONTACT_PHOTO("Contact Photo"),
    @XmlEnumValue("Receipt")
    RECEIPT("Receipt"),
    @XmlEnumValue("Document")
    DOCUMENT("Document"),
    @XmlEnumValue("Sound")
    SOUND("Sound"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    AttachableCategoryEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AttachableCategoryEnum fromValue(String v) {
        for (AttachableCategoryEnum c: AttachableCategoryEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
